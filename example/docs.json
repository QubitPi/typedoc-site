{
	"id": 0,
	"name": "TypeDoc Example",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 615,
			"name": "lodashSortBy",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isExternal": true
			},
			"sources": [
				{
					"fileName": "example/node_modules/@types/lodash/common/collection.d.ts",
					"line": 1900,
					"character": 8
				},
				{
					"fileName": "example/node_modules/@types/lodash/common/collection.d.ts",
					"line": 1904,
					"character": 8
				}
			],
			"signatures": [
				{
					"id": 616,
					"name": "lodashSortBy",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates an array of elements, sorted in ascending order by the results of\nrunning each element in a collection through each iteratee. This method\nperforms a stable sort, that is, it preserves the original sort order of\nequal elements. The iteratees are invoked with one argument: (value)."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "Returns the new sorted array."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nvar users = [\n  { 'user': 'fred',   'age': 48 },\n  { 'user': 'barney', 'age': 36 },\n  { 'user': 'fred',   'age': 42 },\n  { 'user': 'barney', 'age': 34 }\n];\n\n_.sortBy(users, function(o) { return o.user; });\n// => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\n_.sortBy(users, ['user', 'age']);\n// => objects for [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n\n_.sortBy(users, 'user', function(o) {\n  return Math.floor(o.age / 10);\n});\n// => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "example/node_modules/@types/lodash/common/collection.d.ts",
							"line": 1900,
							"character": 8
						}
					],
					"typeParameter": [
						{
							"id": 617,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isExternal": true
							}
						}
					],
					"parameters": [
						{
							"id": 618,
							"name": "collection",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The collection to iterate over."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/lodash/common/common.d.ts",
											"qualifiedName": "\"../index\".List"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										],
										"name": "List",
										"package": "@types/lodash",
										"qualifiedName": "\"../index\".List"
									}
								]
							}
						},
						{
							"id": 619,
							"name": "iteratees",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isRest": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The iteratees to sort by, specified individually or in arrays."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/@types/lodash/common/common.d.ts",
										"qualifiedName": "\"../index\".Many"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "node_modules/@types/lodash/common/common.d.ts",
												"qualifiedName": "\"../index\".ListIteratee"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												}
											],
											"name": "ListIteratee",
											"package": "@types/lodash",
											"qualifiedName": "\"../index\".ListIteratee"
										}
									],
									"name": "Many",
									"package": "@types/lodash",
									"qualifiedName": "\"../index\".Many"
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 620,
					"name": "lodashSortBy",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "_.sortBy"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "example/node_modules/@types/lodash/common/collection.d.ts",
							"line": 1904,
							"character": 8
						}
					],
					"typeParameter": [
						{
							"id": 621,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"parameters": [
						{
							"id": 622,
							"name": "collection",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								]
							}
						},
						{
							"id": 623,
							"name": "iteratees",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isExternal": true,
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/@types/lodash/common/common.d.ts",
										"qualifiedName": "\"../index\".Many"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "node_modules/@types/lodash/common/common.d.ts",
												"qualifiedName": "\"../index\".ObjectIteratee"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												}
											],
											"name": "ObjectIteratee",
											"package": "@types/lodash",
											"qualifiedName": "\"../index\".ObjectIteratee"
										}
									],
									"name": "Many",
									"package": "@types/lodash",
									"qualifiedName": "\"../index\".Many"
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							},
							"objectType": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						}
					}
				}
			]
		},
		{
			"id": 459,
			"name": "CancellablePromise",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This example shows off how TypeDoc handles\n\n- Complex method signatures\n- Static methods\n- A method with 10 overload signatures. Wow!\n    - Only the implementation signature has a doc comment. TypeDoc\n      automatically copies the comment from the implementation signature to\n      each of the visible signatures if they don't have one.\n\nA promise with a "
					},
					{
						"kind": "code",
						"text": "`cancel`"
					},
					{
						"kind": "text",
						"text": " method.  If canceled, the "
					},
					{
						"kind": "code",
						"text": "`CancellablePromise`"
					},
					{
						"kind": "text",
						"text": " will\nreject with a "
					},
					{
						"kind": "code",
						"text": "`Cancellation`"
					},
					{
						"kind": "text",
						"text": " object. Originally from\n[real-cancellable-promise](https://github.com/srmagura/real-cancellable-promise)."
					}
				]
			},
			"children": [
				{
					"id": 567,
					"name": "promise",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "As a consumer of the library, you shouldn't ever need to access\n"
							},
							{
								"kind": "code",
								"text": "`CancellablePromise.promise`"
							},
							{
								"kind": "text",
								"text": " directly.\n\nIf you are subclassing "
							},
							{
								"kind": "code",
								"text": "`CancellablePromise`"
							},
							{
								"kind": "text",
								"text": " for some reason, you\ncan access this property."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 54,
							"character": 23,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L54"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				},
				{
					"id": 568,
					"name": "cancel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 63,
							"character": 13,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L63"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 569,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "example/src/classes/CancellablePromise.ts",
									"line": 63,
									"character": 21,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L63"
								}
							],
							"signatures": [
								{
									"id": 570,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Cancel the "
											},
											{
												"kind": "code",
												"text": "`CancellablePromise`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"sources": [
										{
											"fileName": "example/src/classes/CancellablePromise.ts",
											"line": 63,
											"character": 21,
											"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L63"
										}
									],
									"parameters": [
										{
											"id": 571,
											"name": "reason",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 559,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 70,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L70"
						}
					],
					"signatures": [
						{
							"id": 560,
							"name": "new CancellablePromise",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "example/src/classes/CancellablePromise.ts",
									"line": 70,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L70"
								}
							],
							"typeParameter": [
								{
									"id": 561,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 562,
									"name": "promise",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "a normal promise or thenable"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "PromiseLike"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										],
										"name": "PromiseLike",
										"package": "typescript"
									}
								},
								{
									"id": 563,
									"name": "cancel",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "a function that cancels "
											},
											{
												"kind": "code",
												"text": "`promise`"
											},
											{
												"kind": "text",
												"text": ". **Calling "
											},
											{
												"kind": "code",
												"text": "`cancel`"
											},
											{
												"kind": "text",
												"text": " after\n"
											},
											{
												"kind": "code",
												"text": "`promise`"
											},
											{
												"kind": "text",
												"text": " has resolved must be a no-op.**"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 564,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "example/src/classes/CancellablePromise.ts",
													"line": 70,
													"character": 49,
													"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L70"
												}
											],
											"signatures": [
												{
													"id": 565,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "example/src/classes/CancellablePromise.ts",
															"line": 70,
															"character": 49,
															"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L70"
														}
													],
													"parameters": [
														{
															"id": 566,
															"name": "reason",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 459,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "CancellablePromise",
								"package": "typedoc-example"
							}
						}
					]
				},
				{
					"id": 572,
					"name": "then",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 95,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L95"
						}
					],
					"signatures": [
						{
							"id": 573,
							"name": "then",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Analogous to "
									},
									{
										"kind": "code",
										"text": "`Promise.then`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "`onFulfilled`"
									},
									{
										"kind": "text",
										"text": " on "
									},
									{
										"kind": "code",
										"text": "`onRejected`"
									},
									{
										"kind": "text",
										"text": " can return a value, a normal promise, or a\n"
									},
									{
										"kind": "code",
										"text": "`CancellablePromise`"
									},
									{
										"kind": "text",
										"text": ". So you can make a chain a "
									},
									{
										"kind": "code",
										"text": "`CancellablePromise`"
									},
									{
										"kind": "text",
										"text": "s\nlike this:\n\n"
									},
									{
										"kind": "code",
										"text": "```\nconst overallPromise = cancellableAsyncFunction1()\n    .then(cancellableAsyncFunction2)\n    .then(cancellableAsyncFunction3)\n    .then(cancellableAsyncFunction4)\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThen if you call "
									},
									{
										"kind": "code",
										"text": "`overallPromise.cancel`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`cancel`"
									},
									{
										"kind": "text",
										"text": " is called on all\n"
									},
									{
										"kind": "code",
										"text": "`CancellablePromise`"
									},
									{
										"kind": "text",
										"text": "s in the chain! In practice, this means that\nwhichever async operation is in progress will be canceled."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a new CancellablePromise"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/CancellablePromise.ts",
									"line": 95,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L95"
								}
							],
							"typeParameter": [
								{
									"id": 574,
									"name": "TResult1",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 575,
									"name": "TResult2",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"parameters": [
								{
									"id": 576,
									"name": "onFulfilled",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 577,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "example/src/classes/CancellablePromise.ts",
															"line": 97,
															"character": 15,
															"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L97"
														}
													],
													"signatures": [
														{
															"id": 578,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "example/src/classes/CancellablePromise.ts",
																	"line": 97,
																	"character": 15,
																	"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L97"
																}
															],
															"parameters": [
																{
																	"id": 579,
																	"name": "value",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": -1,
																		"name": "T",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "TResult1",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "PromiseLike"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": -1,
																				"name": "TResult1",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "PromiseLike",
																		"package": "typescript"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 580,
									"name": "onRejected",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 581,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "example/src/classes/CancellablePromise.ts",
															"line": 101,
															"character": 15,
															"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L101"
														}
													],
													"signatures": [
														{
															"id": 582,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "example/src/classes/CancellablePromise.ts",
																	"line": 101,
																	"character": 15,
																	"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L101"
																}
															],
															"parameters": [
																{
																	"id": 583,
																	"name": "reason",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "TResult2",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "PromiseLike"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": -1,
																				"name": "TResult2",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "PromiseLike",
																		"package": "typescript"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 459,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": -1,
												"name": "TResult1",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "TResult2",
												"refersToTypeParameter": true
											}
										]
									}
								],
								"name": "CancellablePromise",
								"package": "typedoc-example"
							}
						}
					]
				},
				{
					"id": 584,
					"name": "catch",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 146,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L146"
						}
					],
					"signatures": [
						{
							"id": 585,
							"name": "catch",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Analogous to "
									},
									{
										"kind": "code",
										"text": "`Promise.catch`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/CancellablePromise.ts",
									"line": 146,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L146"
								}
							],
							"typeParameter": [
								{
									"id": 586,
									"name": "TResult",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"parameters": [
								{
									"id": 587,
									"name": "onRejected",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 588,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "example/src/classes/CancellablePromise.ts",
															"line": 148,
															"character": 15,
															"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L148"
														}
													],
													"signatures": [
														{
															"id": 589,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "example/src/classes/CancellablePromise.ts",
																	"line": 148,
																	"character": 15,
																	"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L148"
																}
															],
															"parameters": [
																{
																	"id": 590,
																	"name": "reason",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": -1,
																		"name": "TResult",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "PromiseLike"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": -1,
																				"name": "TResult",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "PromiseLike",
																		"package": "typescript"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 459,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "TResult",
												"refersToTypeParameter": true
											}
										]
									}
								],
								"name": "CancellablePromise",
								"package": "typedoc-example"
							}
						}
					]
				},
				{
					"id": 591,
					"name": "finally",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 163,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L163"
						}
					],
					"signatures": [
						{
							"id": 592,
							"name": "finally",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Attaches a callback that is invoked when the Promise is settled\n(fulfilled or rejected). The resolved value cannot be modified from the\ncallback."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise for the completion of the callback."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/CancellablePromise.ts",
									"line": 163,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L163"
								}
							],
							"parameters": [
								{
									"id": 593,
									"name": "onFinally",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback to execute when the Promise is settled\n(fulfilled or rejected)."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 594,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "example/src/classes/CancellablePromise.ts",
															"line": 164,
															"character": 21,
															"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L164"
														}
													],
													"signatures": [
														{
															"id": 595,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "example/src/classes/CancellablePromise.ts",
																	"line": 164,
																	"character": 21,
																	"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L164"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 459,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "CancellablePromise",
								"package": "typedoc-example"
							}
						}
					]
				},
				{
					"id": 460,
					"name": "resolve",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 179,
							"character": 11,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L179"
						},
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 181,
							"character": 11,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L181"
						},
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 183,
							"character": 11,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L183"
						}
					],
					"signatures": [
						{
							"id": 461,
							"name": "resolve",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Analogous to "
									},
									{
										"kind": "code",
										"text": "`Promise.resolve`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe returned promise should resolve even if it is canceled. The idea is\nthat the promise is resolved instantaneously, so by the time the promise\nis canceled, it has already resolved."
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/CancellablePromise.ts",
									"line": 179,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L179"
								}
							],
							"type": {
								"type": "reference",
								"target": 459,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise",
								"package": "typedoc-example"
							}
						},
						{
							"id": 462,
							"name": "resolve",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "example/src/classes/CancellablePromise.ts",
									"line": 181,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L181"
								}
							],
							"typeParameter": [
								{
									"id": 463,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 464,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 459,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "CancellablePromise",
								"package": "typedoc-example"
							}
						}
					]
				},
				{
					"id": 465,
					"name": "reject",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 195,
							"character": 11,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L195"
						}
					],
					"signatures": [
						{
							"id": 466,
							"name": "reject",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Analogous to "
									},
									{
										"kind": "code",
										"text": "`Promise.reject`"
									},
									{
										"kind": "text",
										"text": ".\n\nLike "
									},
									{
										"kind": "code",
										"text": "`CancellablePromise.resolve`"
									},
									{
										"kind": "text",
										"text": ", canceling the returned\n"
									},
									{
										"kind": "code",
										"text": "`CancellablePromise`"
									},
									{
										"kind": "text",
										"text": " is a no-op."
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/CancellablePromise.ts",
									"line": 195,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L195"
								}
							],
							"typeParameter": [
								{
									"id": 467,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 468,
									"name": "reason",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "this should probably be an "
											},
											{
												"kind": "code",
												"text": "`Error`"
											},
											{
												"kind": "text",
												"text": " object"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 459,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "CancellablePromise",
								"package": "typedoc-example"
							}
						}
					]
				},
				{
					"id": 469,
					"name": "all",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 199,
							"character": 11,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L199"
						},
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 214,
							"character": 11,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L214"
						},
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 228,
							"character": 11,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L228"
						},
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 241,
							"character": 11,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L241"
						},
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 253,
							"character": 11,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L253"
						},
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 264,
							"character": 11,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L264"
						},
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 274,
							"character": 11,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L274"
						},
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 283,
							"character": 11,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L283"
						},
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 291,
							"character": 11,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L291"
						},
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 295,
							"character": 11,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L295"
						},
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 307,
							"character": 11,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L307"
						}
					],
					"signatures": [
						{
							"id": 470,
							"name": "all",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Analogous to "
									},
									{
										"kind": "code",
										"text": "`Promise.all`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "`CancellablePromise`",
												"target": 459,
												"tsLinkText": "`CancellablePromise`"
											},
											{
												"kind": "text",
												"text": ", which, if canceled, will cancel each\nof the promises passed in to "
											},
											{
												"kind": "code",
												"text": "`CancellablePromise.all`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/CancellablePromise.ts",
									"line": 199,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L199"
								}
							],
							"typeParameter": [
								{
									"id": 471,
									"name": "T1",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 472,
									"name": "T2",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 473,
									"name": "T3",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 474,
									"name": "T4",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 475,
									"name": "T5",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 476,
									"name": "T6",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 477,
									"name": "T7",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 478,
									"name": "T8",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 479,
									"name": "T9",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 480,
									"name": "T10",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 481,
									"name": "values",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an array that may contain "
											},
											{
												"kind": "code",
												"text": "`CancellablePromise`"
											},
											{
												"kind": "text",
												"text": "s, promises,\nthenables, and resolved values"
											}
										]
									},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "tuple",
											"elements": [
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T1",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T1",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T2",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T2",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T3",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T3",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T4",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T4",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T5",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T5",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T6",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T6",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T7",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T7",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T8",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T8",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T9",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T9",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T10",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T10",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 459,
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"target": -1,
												"name": "T1",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T2",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T3",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T4",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T5",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T6",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T7",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T8",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T9",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T10",
												"refersToTypeParameter": true
											}
										]
									}
								],
								"name": "CancellablePromise",
								"package": "typedoc-example"
							}
						},
						{
							"id": 482,
							"name": "all",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Analogous to "
									},
									{
										"kind": "code",
										"text": "`Promise.all`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "`CancellablePromise`",
												"target": 459,
												"tsLinkText": "`CancellablePromise`"
											},
											{
												"kind": "text",
												"text": ", which, if canceled, will cancel each\nof the promises passed in to "
											},
											{
												"kind": "code",
												"text": "`CancellablePromise.all`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/CancellablePromise.ts",
									"line": 214,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L214"
								}
							],
							"typeParameter": [
								{
									"id": 483,
									"name": "T1",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 484,
									"name": "T2",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 485,
									"name": "T3",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 486,
									"name": "T4",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 487,
									"name": "T5",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 488,
									"name": "T6",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 489,
									"name": "T7",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 490,
									"name": "T8",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 491,
									"name": "T9",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 492,
									"name": "values",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an array that may contain "
											},
											{
												"kind": "code",
												"text": "`CancellablePromise`"
											},
											{
												"kind": "text",
												"text": "s, promises,\nthenables, and resolved values"
											}
										]
									},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "tuple",
											"elements": [
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T1",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T1",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T2",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T2",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T3",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T3",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T4",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T4",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T5",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T5",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T6",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T6",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T7",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T7",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T8",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T8",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T9",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T9",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 459,
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"target": -1,
												"name": "T1",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T2",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T3",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T4",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T5",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T6",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T7",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T8",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T9",
												"refersToTypeParameter": true
											}
										]
									}
								],
								"name": "CancellablePromise",
								"package": "typedoc-example"
							}
						},
						{
							"id": 493,
							"name": "all",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Analogous to "
									},
									{
										"kind": "code",
										"text": "`Promise.all`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "`CancellablePromise`",
												"target": 459,
												"tsLinkText": "`CancellablePromise`"
											},
											{
												"kind": "text",
												"text": ", which, if canceled, will cancel each\nof the promises passed in to "
											},
											{
												"kind": "code",
												"text": "`CancellablePromise.all`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/CancellablePromise.ts",
									"line": 228,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L228"
								}
							],
							"typeParameter": [
								{
									"id": 494,
									"name": "T1",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 495,
									"name": "T2",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 496,
									"name": "T3",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 497,
									"name": "T4",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 498,
									"name": "T5",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 499,
									"name": "T6",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 500,
									"name": "T7",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 501,
									"name": "T8",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 502,
									"name": "values",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an array that may contain "
											},
											{
												"kind": "code",
												"text": "`CancellablePromise`"
											},
											{
												"kind": "text",
												"text": "s, promises,\nthenables, and resolved values"
											}
										]
									},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "tuple",
											"elements": [
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T1",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T1",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T2",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T2",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T3",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T3",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T4",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T4",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T5",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T5",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T6",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T6",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T7",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T7",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T8",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T8",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 459,
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"target": -1,
												"name": "T1",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T2",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T3",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T4",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T5",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T6",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T7",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T8",
												"refersToTypeParameter": true
											}
										]
									}
								],
								"name": "CancellablePromise",
								"package": "typedoc-example"
							}
						},
						{
							"id": 503,
							"name": "all",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Analogous to "
									},
									{
										"kind": "code",
										"text": "`Promise.all`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "`CancellablePromise`",
												"target": 459,
												"tsLinkText": "`CancellablePromise`"
											},
											{
												"kind": "text",
												"text": ", which, if canceled, will cancel each\nof the promises passed in to "
											},
											{
												"kind": "code",
												"text": "`CancellablePromise.all`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/CancellablePromise.ts",
									"line": 241,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L241"
								}
							],
							"typeParameter": [
								{
									"id": 504,
									"name": "T1",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 505,
									"name": "T2",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 506,
									"name": "T3",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 507,
									"name": "T4",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 508,
									"name": "T5",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 509,
									"name": "T6",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 510,
									"name": "T7",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 511,
									"name": "values",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an array that may contain "
											},
											{
												"kind": "code",
												"text": "`CancellablePromise`"
											},
											{
												"kind": "text",
												"text": "s, promises,\nthenables, and resolved values"
											}
										]
									},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "tuple",
											"elements": [
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T1",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T1",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T2",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T2",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T3",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T3",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T4",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T4",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T5",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T5",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T6",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T6",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T7",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T7",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 459,
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"target": -1,
												"name": "T1",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T2",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T3",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T4",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T5",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T6",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T7",
												"refersToTypeParameter": true
											}
										]
									}
								],
								"name": "CancellablePromise",
								"package": "typedoc-example"
							}
						},
						{
							"id": 512,
							"name": "all",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Analogous to "
									},
									{
										"kind": "code",
										"text": "`Promise.all`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "`CancellablePromise`",
												"target": 459,
												"tsLinkText": "`CancellablePromise`"
											},
											{
												"kind": "text",
												"text": ", which, if canceled, will cancel each\nof the promises passed in to "
											},
											{
												"kind": "code",
												"text": "`CancellablePromise.all`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/CancellablePromise.ts",
									"line": 253,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L253"
								}
							],
							"typeParameter": [
								{
									"id": 513,
									"name": "T1",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 514,
									"name": "T2",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 515,
									"name": "T3",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 516,
									"name": "T4",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 517,
									"name": "T5",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 518,
									"name": "T6",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 519,
									"name": "values",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an array that may contain "
											},
											{
												"kind": "code",
												"text": "`CancellablePromise`"
											},
											{
												"kind": "text",
												"text": "s, promises,\nthenables, and resolved values"
											}
										]
									},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "tuple",
											"elements": [
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T1",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T1",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T2",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T2",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T3",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T3",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T4",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T4",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T5",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T5",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T6",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T6",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 459,
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"target": -1,
												"name": "T1",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T2",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T3",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T4",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T5",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T6",
												"refersToTypeParameter": true
											}
										]
									}
								],
								"name": "CancellablePromise",
								"package": "typedoc-example"
							}
						},
						{
							"id": 520,
							"name": "all",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Analogous to "
									},
									{
										"kind": "code",
										"text": "`Promise.all`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "`CancellablePromise`",
												"target": 459,
												"tsLinkText": "`CancellablePromise`"
											},
											{
												"kind": "text",
												"text": ", which, if canceled, will cancel each\nof the promises passed in to "
											},
											{
												"kind": "code",
												"text": "`CancellablePromise.all`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/CancellablePromise.ts",
									"line": 264,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L264"
								}
							],
							"typeParameter": [
								{
									"id": 521,
									"name": "T1",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 522,
									"name": "T2",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 523,
									"name": "T3",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 524,
									"name": "T4",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 525,
									"name": "T5",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 526,
									"name": "values",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an array that may contain "
											},
											{
												"kind": "code",
												"text": "`CancellablePromise`"
											},
											{
												"kind": "text",
												"text": "s, promises,\nthenables, and resolved values"
											}
										]
									},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "tuple",
											"elements": [
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T1",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T1",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T2",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T2",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T3",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T3",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T4",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T4",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T5",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T5",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 459,
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"target": -1,
												"name": "T1",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T2",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T3",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T4",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T5",
												"refersToTypeParameter": true
											}
										]
									}
								],
								"name": "CancellablePromise",
								"package": "typedoc-example"
							}
						},
						{
							"id": 527,
							"name": "all",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Analogous to "
									},
									{
										"kind": "code",
										"text": "`Promise.all`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "`CancellablePromise`",
												"target": 459,
												"tsLinkText": "`CancellablePromise`"
											},
											{
												"kind": "text",
												"text": ", which, if canceled, will cancel each\nof the promises passed in to "
											},
											{
												"kind": "code",
												"text": "`CancellablePromise.all`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/CancellablePromise.ts",
									"line": 274,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L274"
								}
							],
							"typeParameter": [
								{
									"id": 528,
									"name": "T1",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 529,
									"name": "T2",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 530,
									"name": "T3",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 531,
									"name": "T4",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 532,
									"name": "values",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an array that may contain "
											},
											{
												"kind": "code",
												"text": "`CancellablePromise`"
											},
											{
												"kind": "text",
												"text": "s, promises,\nthenables, and resolved values"
											}
										]
									},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "tuple",
											"elements": [
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T1",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T1",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T2",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T2",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T3",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T3",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T4",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T4",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 459,
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"target": -1,
												"name": "T1",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T2",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T3",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T4",
												"refersToTypeParameter": true
											}
										]
									}
								],
								"name": "CancellablePromise",
								"package": "typedoc-example"
							}
						},
						{
							"id": 533,
							"name": "all",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Analogous to "
									},
									{
										"kind": "code",
										"text": "`Promise.all`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "`CancellablePromise`",
												"target": 459,
												"tsLinkText": "`CancellablePromise`"
											},
											{
												"kind": "text",
												"text": ", which, if canceled, will cancel each\nof the promises passed in to "
											},
											{
												"kind": "code",
												"text": "`CancellablePromise.all`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/CancellablePromise.ts",
									"line": 283,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L283"
								}
							],
							"typeParameter": [
								{
									"id": 534,
									"name": "T1",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 535,
									"name": "T2",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 536,
									"name": "T3",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 537,
									"name": "values",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an array that may contain "
											},
											{
												"kind": "code",
												"text": "`CancellablePromise`"
											},
											{
												"kind": "text",
												"text": "s, promises,\nthenables, and resolved values"
											}
										]
									},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "tuple",
											"elements": [
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T1",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T1",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T2",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T2",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T3",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T3",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 459,
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"target": -1,
												"name": "T1",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T2",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T3",
												"refersToTypeParameter": true
											}
										]
									}
								],
								"name": "CancellablePromise",
								"package": "typedoc-example"
							}
						},
						{
							"id": 538,
							"name": "all",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Analogous to "
									},
									{
										"kind": "code",
										"text": "`Promise.all`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "`CancellablePromise`",
												"target": 459,
												"tsLinkText": "`CancellablePromise`"
											},
											{
												"kind": "text",
												"text": ", which, if canceled, will cancel each\nof the promises passed in to "
											},
											{
												"kind": "code",
												"text": "`CancellablePromise.all`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/CancellablePromise.ts",
									"line": 291,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L291"
								}
							],
							"typeParameter": [
								{
									"id": 539,
									"name": "T1",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 540,
									"name": "T2",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 541,
									"name": "values",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an array that may contain "
											},
											{
												"kind": "code",
												"text": "`CancellablePromise`"
											},
											{
												"kind": "text",
												"text": "s, promises,\nthenables, and resolved values"
											}
										]
									},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "tuple",
											"elements": [
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T1",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T1",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												},
												{
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": -1,
															"name": "T2",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "PromiseLike"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "T2",
																	"refersToTypeParameter": true
																}
															],
															"name": "PromiseLike",
															"package": "typescript"
														}
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 459,
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"target": -1,
												"name": "T1",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T2",
												"refersToTypeParameter": true
											}
										]
									}
								],
								"name": "CancellablePromise",
								"package": "typedoc-example"
							}
						},
						{
							"id": 542,
							"name": "all",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Analogous to "
									},
									{
										"kind": "code",
										"text": "`Promise.all`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "`CancellablePromise`",
												"target": 459,
												"tsLinkText": "`CancellablePromise`"
											},
											{
												"kind": "text",
												"text": ", which, if canceled, will cancel each\nof the promises passed in to "
											},
											{
												"kind": "code",
												"text": "`CancellablePromise.all`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/CancellablePromise.ts",
									"line": 295,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L295"
								}
							],
							"typeParameter": [
								{
									"id": 543,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 544,
									"name": "values",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an array that may contain "
											},
											{
												"kind": "code",
												"text": "`CancellablePromise`"
											},
											{
												"kind": "text",
												"text": "s, promises,\nthenables, and resolved values"
											}
										]
									},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "PromiseLike"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": -1,
																"name": "T",
																"refersToTypeParameter": true
															}
														],
														"name": "PromiseLike",
														"package": "typescript"
													}
												]
											}
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 459,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									}
								],
								"name": "CancellablePromise",
								"package": "typedoc-example"
							}
						}
					]
				},
				{
					"id": 545,
					"name": "allSettled",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 321,
							"character": 11,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L321"
						},
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 337,
							"character": 11,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L337"
						},
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 343,
							"character": 11,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L343"
						}
					],
					"signatures": [
						{
							"id": 546,
							"name": "allSettled",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a "
									},
									{
										"kind": "code",
										"text": "`CancellablePromise`"
									},
									{
										"kind": "text",
										"text": " that is resolved with an array of results\nwhen all of the provided "
									},
									{
										"kind": "code",
										"text": "`Promises`"
									},
									{
										"kind": "text",
										"text": " resolve or reject."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A new "
											},
											{
												"kind": "code",
												"text": "`CancellablePromise`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/CancellablePromise.ts",
									"line": 321,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L321"
								}
							],
							"typeParameter": [
								{
									"id": 547,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeOperator",
												"operator": "readonly",
												"target": {
													"type": "array",
													"elementType": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											},
											{
												"type": "typeOperator",
												"operator": "readonly",
												"target": {
													"type": "tuple",
													"elements": [
														{
															"type": "intrinsic",
															"name": "unknown"
														}
													]
												}
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 548,
									"name": "values",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of "
											},
											{
												"kind": "code",
												"text": "`Promises`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 459,
								"typeArguments": [
									{
										"type": "mapped",
										"parameter": "P",
										"parameterType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "number"
												},
												{
													"type": "intrinsic",
													"name": "symbol"
												}
											]
										},
										"templateType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../node_modules/typescript/lib/lib.es2020.promise.d.ts",
												"qualifiedName": "PromiseSettledResult"
											},
											"typeArguments": [
												{
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": -1,
															"name": "P",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													},
													"extendsType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "PromiseLike"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": -1,
																"name": "U",
																"refersToTypeParameter": true
															}
														],
														"name": "PromiseLike",
														"package": "typescript"
													},
													"trueType": {
														"type": "reference",
														"target": -1,
														"name": "U",
														"refersToTypeParameter": true
													},
													"falseType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": -1,
															"name": "P",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													}
												}
											],
											"name": "PromiseSettledResult",
											"package": "typescript"
										},
										"readonlyModifier": "-"
									}
								],
								"name": "CancellablePromise",
								"package": "typedoc-example"
							}
						},
						{
							"id": 549,
							"name": "allSettled",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a "
									},
									{
										"kind": "code",
										"text": "`CancellablePromise`"
									},
									{
										"kind": "text",
										"text": " that is resolved with an array of results\nwhen all of the provided "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": "s resolve or reject."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A new "
											},
											{
												"kind": "code",
												"text": "`CancellablePromise`"
											},
											{
												"kind": "text",
												"text": ". Canceling it cancels all of the input\npromises."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/CancellablePromise.ts",
									"line": 337,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L337"
								}
							],
							"typeParameter": [
								{
									"id": 550,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 551,
									"name": "values",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of "
											},
											{
												"kind": "code",
												"text": "`Promise`"
											},
											{
												"kind": "text",
												"text": "s."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"qualifiedName": "Iterable"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										],
										"name": "Iterable",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 459,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../node_modules/typescript/lib/lib.es2020.promise.d.ts",
												"qualifiedName": "PromiseSettledResult"
											},
											"typeArguments": [
												{
													"type": "conditional",
													"checkType": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													},
													"extendsType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "PromiseLike"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": -1,
																"name": "U",
																"refersToTypeParameter": true
															}
														],
														"name": "PromiseLike",
														"package": "typescript"
													},
													"trueType": {
														"type": "reference",
														"target": -1,
														"name": "U",
														"refersToTypeParameter": true
													},
													"falseType": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "PromiseSettledResult",
											"package": "typescript"
										}
									}
								],
								"name": "CancellablePromise",
								"package": "typedoc-example"
							}
						}
					]
				},
				{
					"id": 552,
					"name": "race",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 362,
							"character": 11,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L362"
						}
					],
					"signatures": [
						{
							"id": 553,
							"name": "race",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a "
									},
									{
										"kind": "code",
										"text": "`CancellablePromise`"
									},
									{
										"kind": "text",
										"text": " that is resolved or rejected when any of\nthe provided "
									},
									{
										"kind": "code",
										"text": "`Promises`"
									},
									{
										"kind": "text",
										"text": " are resolved or rejected."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A new "
											},
											{
												"kind": "code",
												"text": "`CancellablePromise`"
											},
											{
												"kind": "text",
												"text": ". Canceling it cancels all of the input\npromises."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/CancellablePromise.ts",
									"line": 362,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L362"
								}
							],
							"typeParameter": [
								{
									"id": 554,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 555,
									"name": "values",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of "
											},
											{
												"kind": "code",
												"text": "`Promises`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 459,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Awaited"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										],
										"name": "Awaited",
										"package": "typescript"
									}
								],
								"name": "CancellablePromise",
								"package": "typedoc-example"
							}
						}
					]
				},
				{
					"id": 556,
					"name": "delay",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "example/src/classes/CancellablePromise.ts",
							"line": 377,
							"character": 11,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L377"
						}
					],
					"signatures": [
						{
							"id": 557,
							"name": "delay",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a "
											},
											{
												"kind": "code",
												"text": "`CancellablePromise`"
											},
											{
												"kind": "text",
												"text": " that resolves after "
											},
											{
												"kind": "code",
												"text": "`ms`"
											},
											{
												"kind": "text",
												"text": " milliseconds."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/CancellablePromise.ts",
									"line": 377,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L377"
								}
							],
							"parameters": [
								{
									"id": 558,
									"name": "ms",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 459,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise",
								"package": "typedoc-example"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						559
					]
				},
				{
					"title": "Properties",
					"children": [
						567,
						568
					]
				},
				{
					"title": "Methods",
					"children": [
						572,
						584,
						591,
						460,
						465,
						469,
						545,
						552,
						556
					]
				}
			],
			"sources": [
				{
					"fileName": "example/src/classes/CancellablePromise.ts",
					"line": 46,
					"character": 13,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/CancellablePromise.ts#L46"
				}
			],
			"relevanceBoost": 1.5,
			"typeParameters": [
				{
					"id": 596,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "what the "
							},
							{
								"kind": "code",
								"text": "`CancellablePromise`"
							},
							{
								"kind": "text",
								"text": " resolves to"
							}
						]
					}
				}
			]
		},
		{
			"id": 64,
			"name": "Customer",
			"variant": "declaration",
			"kind": 128,
			"flags": {
				"isAbstract": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An abstract base class for the customer entity in our application.\n\nNotice how TypeDoc shows the inheritance hierarchy for our class."
					}
				]
			},
			"children": [
				{
					"id": 70,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A public readonly property."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/classes/Customer.ts",
							"line": 10,
							"character": 13,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L10"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 71,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A public property that can be reassigned."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/classes/Customer.ts",
							"line": 13,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L13"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 72,
					"name": "contactName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional protected property."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/classes/Customer.ts",
							"line": 16,
							"character": 14,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L16"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 73,
					"name": "_nextOrderNumber",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A private property that is accessed via a getter and setter."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/classes/Customer.ts",
							"line": 19,
							"character": 12,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L19"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 74,
					"name": "nextOrderNumber",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/classes/Customer.ts",
							"line": 25,
							"character": 8,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L25"
						},
						{
							"fileName": "example/src/classes/Customer.ts",
							"line": 33,
							"character": 8,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L33"
						}
					],
					"getSignature": {
						"id": 75,
						"name": "nextOrderNumber",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "A getter that prepends a number sign to the private "
								},
								{
									"kind": "code",
									"text": "`_nextOrderNumber`"
								},
								{
									"kind": "text",
									"text": "\nproperty."
								}
							]
						},
						"sources": [
							{
								"fileName": "example/src/classes/Customer.ts",
								"line": 25,
								"character": 4,
								"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L25"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"setSignature": {
						"id": 76,
						"name": "nextOrderNumber",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "A setter that takes in either a string or a number and sets the private\n"
								},
								{
									"kind": "code",
									"text": "`_nextOrderNumber`"
								},
								{
									"kind": "text",
									"text": " property."
								}
							]
						},
						"sources": [
							{
								"fileName": "example/src/classes/Customer.ts",
								"line": 33,
								"character": 4,
								"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L33"
							}
						],
						"parameters": [
							{
								"id": 77,
								"name": "value",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										}
									]
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 65,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/classes/Customer.ts",
							"line": 48,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L48"
						}
					],
					"signatures": [
						{
							"id": 66,
							"name": "new Customer",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The constructor of the "
									},
									{
										"kind": "code",
										"text": "`Customer`"
									},
									{
										"kind": "text",
										"text": " class."
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/Customer.ts",
									"line": 48,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L48"
								}
							],
							"parameters": [
								{
									"id": 67,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the customer's database ID"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 68,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the customer's name"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 69,
									"name": "nextOrderNumber",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the next number to use when this customer places an order"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 64,
								"name": "Customer",
								"package": "typedoc-example"
							}
						}
					]
				},
				{
					"id": 78,
					"name": "onOrderPlaced",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/classes/Customer.ts",
							"line": 56,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L56"
						}
					],
					"signatures": [
						{
							"id": 79,
							"name": "onOrderPlaced",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A public method. To be called when an order is placed for this customer."
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/Customer.ts",
									"line": 56,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L56"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 80,
					"name": "onOrderPlacedArrowFunction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/classes/Customer.ts",
							"line": 65,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L65"
						}
					],
					"signatures": [
						{
							"id": 81,
							"name": "onOrderPlacedArrowFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A public method that's defined using an arrow function.\n\nTypeDoc knows to document this as a method rather than a property."
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/Customer.ts",
									"line": 65,
									"character": 33,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L65"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 82,
					"name": "isValid",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "example/src/classes/Customer.ts",
							"line": 70,
							"character": 14,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L70"
						}
					],
					"signatures": [
						{
							"id": 83,
							"name": "isValid",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A protected method."
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/Customer.ts",
									"line": 70,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L70"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 84,
					"name": "doInternalStuff",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "example/src/classes/Customer.ts",
							"line": 75,
							"character": 12,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L75"
						}
					],
					"signatures": [
						{
							"id": 85,
							"name": "doInternalStuff",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A private method."
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/Customer.ts",
									"line": 75,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L75"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						65
					]
				},
				{
					"title": "Properties",
					"children": [
						70,
						71,
						72,
						73
					]
				},
				{
					"title": "Accessors",
					"children": [
						74
					]
				},
				{
					"title": "Methods",
					"children": [
						78,
						80,
						82,
						84
					]
				}
			],
			"sources": [
				{
					"fileName": "example/src/classes/Customer.ts",
					"line": 8,
					"character": 22,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L8"
				}
			],
			"relevanceBoost": 1.7999999999999998,
			"extendedBy": [
				{
					"type": "reference",
					"target": 86,
					"name": "DeliveryCustomer"
				}
			]
		},
		{
			"id": 86,
			"name": "DeliveryCustomer",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A class that extends "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "`Customer`",
						"target": 64,
						"tsLinkText": "`Customer`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 97,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A public readonly property."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/classes/Customer.ts",
							"line": 10,
							"character": 13,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L10"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 70,
						"name": "Customer.id"
					}
				},
				{
					"id": 98,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A public property that can be reassigned."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/classes/Customer.ts",
							"line": 13,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L13"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 71,
						"name": "Customer.name"
					}
				},
				{
					"id": 99,
					"name": "contactName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional protected property."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/classes/Customer.ts",
							"line": 16,
							"character": 14,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L16"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 72,
						"name": "Customer.contactName"
					}
				},
				{
					"id": 100,
					"name": "nextOrderNumber",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/classes/Customer.ts",
							"line": 25,
							"character": 8,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L25"
						},
						{
							"fileName": "example/src/classes/Customer.ts",
							"line": 33,
							"character": 8,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L33"
						}
					],
					"getSignature": {
						"id": 101,
						"name": "nextOrderNumber",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "A getter that prepends a number sign to the private "
								},
								{
									"kind": "code",
									"text": "`_nextOrderNumber`"
								},
								{
									"kind": "text",
									"text": "\nproperty."
								}
							]
						},
						"sources": [
							{
								"fileName": "example/src/classes/Customer.ts",
								"line": 25,
								"character": 4,
								"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L25"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "Customer.nextOrderNumber"
						}
					},
					"setSignature": {
						"id": 102,
						"name": "nextOrderNumber",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "A setter that takes in either a string or a number and sets the private\n"
								},
								{
									"kind": "code",
									"text": "`_nextOrderNumber`"
								},
								{
									"kind": "text",
									"text": " property."
								}
							]
						},
						"sources": [
							{
								"fileName": "example/src/classes/Customer.ts",
								"line": 33,
								"character": 4,
								"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L33"
							}
						],
						"parameters": [
							{
								"id": 103,
								"name": "value",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										}
									]
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "Customer.nextOrderNumber"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 74,
						"name": "Customer.nextOrderNumber"
					}
				},
				{
					"id": 104,
					"name": "onOrderPlaced",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/classes/Customer.ts",
							"line": 56,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L56"
						}
					],
					"signatures": [
						{
							"id": 105,
							"name": "onOrderPlaced",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A public method. To be called when an order is placed for this customer."
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/Customer.ts",
									"line": 56,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L56"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 79,
								"name": "Customer.onOrderPlaced"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 78,
						"name": "Customer.onOrderPlaced"
					}
				},
				{
					"id": 106,
					"name": "onOrderPlacedArrowFunction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/classes/Customer.ts",
							"line": 65,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L65"
						}
					],
					"signatures": [
						{
							"id": 107,
							"name": "onOrderPlacedArrowFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A public method that's defined using an arrow function.\n\nTypeDoc knows to document this as a method rather than a property."
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/Customer.ts",
									"line": 65,
									"character": 33,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L65"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 81,
								"name": "Customer.onOrderPlacedArrowFunction"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 80,
						"name": "Customer.onOrderPlacedArrowFunction"
					}
				},
				{
					"id": 93,
					"name": "preferredCourierId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A property defined on the subclass."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/classes/Customer.ts",
							"line": 85,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L85"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 94,
					"name": "subscriptionType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Another property defined on the subclass."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/classes/Customer.ts",
							"line": 88,
							"character": 13,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L88"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "basic"
							},
							{
								"type": "literal",
								"value": "enterprise"
							}
						]
					}
				},
				{
					"id": 87,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/classes/Customer.ts",
							"line": 98,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L98"
						}
					],
					"signatures": [
						{
							"id": 88,
							"name": "new DeliveryCustomer",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The constructor of the "
									},
									{
										"kind": "code",
										"text": "`DeliveryCustomer`"
									},
									{
										"kind": "text",
										"text": " class."
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/Customer.ts",
									"line": 98,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L98"
								}
							],
							"parameters": [
								{
									"id": 89,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the customer's database ID"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 90,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the customer's name"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 91,
									"name": "nextOrderNumber",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the next number to use when this customer places an order"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 92,
									"name": "subscriptionType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "whether this customer has a basic or enterprise subscription"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "basic"
											},
											{
												"type": "literal",
												"value": "enterprise"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 86,
								"name": "DeliveryCustomer",
								"package": "typedoc-example"
							},
							"overwrites": {
								"type": "reference",
								"target": 66,
								"name": "Customer.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 65,
						"name": "Customer.constructor"
					}
				},
				{
					"id": 95,
					"name": "isValid",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "example/src/classes/Customer.ts",
							"line": 114,
							"character": 14,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L114"
						}
					],
					"signatures": [
						{
							"id": 96,
							"name": "isValid",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An example of overriding a protected method.\n\nA "
									},
									{
										"kind": "code",
										"text": "`DeliveryCustomer`"
									},
									{
										"kind": "text",
										"text": " can only have a preferred courier if its\nsubscription type is enterprise."
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/Customer.ts",
									"line": 114,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L114"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"target": 83,
								"name": "Customer.isValid"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 82,
						"name": "Customer.isValid"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						87
					]
				},
				{
					"title": "Properties",
					"children": [
						97,
						98,
						99,
						93,
						94
					]
				},
				{
					"title": "Accessors",
					"children": [
						100
					]
				},
				{
					"title": "Methods",
					"children": [
						104,
						106,
						95
					]
				}
			],
			"sources": [
				{
					"fileName": "example/src/classes/Customer.ts",
					"line": 83,
					"character": 13,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/Customer.ts#L83"
				}
			],
			"relevanceBoost": 1.5,
			"extendedTypes": [
				{
					"type": "reference",
					"target": 64,
					"name": "Customer",
					"package": "typedoc-example"
				}
			]
		},
		{
			"id": 108,
			"name": "StringArray",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An array of strings that's defined as\n\n"
					},
					{
						"kind": "code",
						"text": "```\nexport class StringArray extends Array<string> {\n    // ...\n}\n```"
					},
					{
						"kind": "text",
						"text": "\n\nNotice how TypeDoc has substituted "
					},
					{
						"kind": "code",
						"text": "`string`"
					},
					{
						"kind": "text",
						"text": " for the generic type argument in all\nthe methods inherited from "
					},
					{
						"kind": "code",
						"text": "`Array`"
					},
					{
						"kind": "text",
						"text": ". For example, the "
					},
					{
						"kind": "code",
						"text": "`values`"
					},
					{
						"kind": "text",
						"text": " method returns\n"
					},
					{
						"kind": "code",
						"text": "`IterableIterator<string>`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 149,
					"name": "customMethod",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/classes/StringArray.ts",
							"line": 16,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/StringArray.ts#L16"
						}
					],
					"signatures": [
						{
							"id": 150,
							"name": "customMethod",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A method that extends the functionality of a basic JavaScript array."
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/classes/StringArray.ts",
									"line": 16,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/StringArray.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 323,
					"name": "find",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 29,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 324,
							"name": "find",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the value of the first element in the array where predicate is true, and undefined\notherwise."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 325,
									"name": "S",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 326,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found, find\nimmediately returns that element value. Otherwise, find returns undefined."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 327,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
													"line": 29,
													"character": 33
												}
											],
											"signatures": [
												{
													"id": 328,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
															"line": 29,
															"character": 33
														}
													],
													"parameters": [
														{
															"id": 329,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 330,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 331,
															"name": "obj",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "reference",
															"target": -1,
															"name": "S",
															"refersToTypeParameter": true
														}
													}
												}
											]
										}
									}
								},
								{
									"id": 332,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": -1,
										"name": "S",
										"refersToTypeParameter": true
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.find"
							}
						},
						{
							"id": 333,
							"name": "find",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
									"line": 30,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 334,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 335,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
													"line": 30,
													"character": 20
												}
											],
											"signatures": [
												{
													"id": 336,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
															"line": 30,
															"character": 20
														}
													],
													"parameters": [
														{
															"id": 337,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 338,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 339,
															"name": "obj",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 340,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.find"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.find"
					}
				},
				{
					"id": 341,
					"name": "findIndex",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 342,
							"name": "findIndex",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the index of the first element in the array where predicate is true, and -1\notherwise."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
									"line": 41,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 343,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found,\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 344,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
													"line": 41,
													"character": 25
												}
											],
											"signatures": [
												{
													"id": 345,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
															"line": 41,
															"character": 25
														}
													],
													"parameters": [
														{
															"id": 346,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 347,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 348,
															"name": "obj",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 349,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.findIndex"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.findIndex"
					}
				},
				{
					"id": 350,
					"name": "fill",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 51,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 351,
							"name": "fill",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Changes all array elements from "
									},
									{
										"kind": "code",
										"text": "`start`"
									},
									{
										"kind": "text",
										"text": " to "
									},
									{
										"kind": "code",
										"text": "`end`"
									},
									{
										"kind": "text",
										"text": " index to a static "
									},
									{
										"kind": "code",
										"text": "`value`"
									},
									{
										"kind": "text",
										"text": " and returns the modified array"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
									"line": 51,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 352,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "value to fill array section with"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 353,
									"name": "start",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "index to start filling the array at. If start is negative, it is treated as\nlength+start where length is the length of the array."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 354,
									"name": "end",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "index to stop filling the array at. If end is negative, it is treated as\nlength+end."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 108,
								"name": "StringArray",
								"package": "typedoc-example"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.fill"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.fill"
					}
				},
				{
					"id": 355,
					"name": "copyWithin",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 62,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 356,
							"name": "copyWithin",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
									"line": 62,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 357,
									"name": "target",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If target is negative, it is treated as length+target where length is the\nlength of the array."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 358,
									"name": "start",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If start is negative, it is treated as length+start. If end is negative, it\nis treated as length+end."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 359,
									"name": "end",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If not specified, length of the this object is used as its default value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 108,
								"name": "StringArray",
								"package": "typedoc-example"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.copyWithin"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.copyWithin"
					}
				},
				{
					"id": 112,
					"name": "from",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 70,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 78,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 81,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 89,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 113,
							"name": "from",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates an array from an array-like object."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
									"line": 70,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 114,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 115,
									"name": "arrayLike",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array-like object to convert to an array."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "ArrayLike"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										],
										"name": "ArrayLike",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.from"
							}
						},
						{
							"id": 116,
							"name": "from",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates an array from an iterable object."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
									"line": 78,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 117,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 118,
									"name": "U",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 119,
									"name": "arrayLike",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array-like object to convert to an array."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "ArrayLike"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										],
										"name": "ArrayLike",
										"package": "typescript"
									}
								},
								{
									"id": 120,
									"name": "mapfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A mapping function to call on every element of the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 121,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
													"line": 78,
													"character": 47
												}
											],
											"signatures": [
												{
													"id": 122,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
															"line": 78,
															"character": 47
														}
													],
													"parameters": [
														{
															"id": 123,
															"name": "v",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": -1,
																"name": "T",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 124,
															"name": "k",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": -1,
														"name": "U",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								},
								{
									"id": 125,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Value of 'this' used to invoke the mapfn."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "U",
									"refersToTypeParameter": true
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.from"
							}
						},
						{
							"id": 126,
							"name": "from",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates an array from an iterable object."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 81,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 127,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 128,
									"name": "iterable",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An iterable object to convert to an array."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
													"qualifiedName": "Iterable"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "Iterable",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ArrayLike"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ArrayLike",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.from"
							}
						},
						{
							"id": 129,
							"name": "from",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates an array from an iterable object."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 89,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 130,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 131,
									"name": "U",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 132,
									"name": "iterable",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An iterable object to convert to an array."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
													"qualifiedName": "Iterable"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "Iterable",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ArrayLike"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "ArrayLike",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 133,
									"name": "mapfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A mapping function to call on every element of the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 134,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
													"line": 89,
													"character": 60
												}
											],
											"signatures": [
												{
													"id": 135,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
															"line": 89,
															"character": 60
														}
													],
													"parameters": [
														{
															"id": 136,
															"name": "v",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": -1,
																"name": "T",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 137,
															"name": "k",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": -1,
														"name": "U",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								},
								{
									"id": 138,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Value of 'this' used to invoke the mapfn."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "U",
									"refersToTypeParameter": true
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.from"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.from"
					}
				},
				{
					"id": 139,
					"name": "of",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 84,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 140,
							"name": "of",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a new array from a set of elements."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
									"line": 84,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 141,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 142,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A set of elements to include in the new array object."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.of"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.of"
					}
				},
				{
					"id": 418,
					"name": "[iterator]",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 58,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 419,
							"name": "[iterator]",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Iterator"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 58,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"qualifiedName": "IterableIterator"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "IterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.[iterator]"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.[iterator]"
					}
				},
				{
					"id": 360,
					"name": "entries",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 63,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 361,
							"name": "entries",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an iterable of key, value pairs for every entry in the array"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 63,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"qualifiedName": "IterableIterator"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "IterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.entries"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.entries"
					}
				},
				{
					"id": 362,
					"name": "keys",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 68,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 363,
							"name": "keys",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an iterable of keys in the array"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 68,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"qualifiedName": "IterableIterator"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "IterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.keys"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.keys"
					}
				},
				{
					"id": 364,
					"name": "values",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 73,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 365,
							"name": "values",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an iterable of values in the array"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 73,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"qualifiedName": "IterableIterator"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "IterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.values"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.values"
					}
				},
				{
					"id": 420,
					"name": "[unscopables]",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Is an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
							"line": 97,
							"character": 13
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 421,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 444,
									"name": "find",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
											"line": 29,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
											"line": 30,
											"character": 4
										}
									]
								},
								{
									"id": 445,
									"name": "findIndex",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
											"line": 41,
											"character": 4
										}
									]
								},
								{
									"id": 446,
									"name": "fill",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
											"line": 51,
											"character": 4
										}
									]
								},
								{
									"id": 447,
									"name": "copyWithin",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
											"line": 62,
											"character": 4
										}
									]
								},
								{
									"id": 457,
									"name": "[iterator]",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"line": 58,
											"character": 4
										}
									]
								},
								{
									"id": 448,
									"name": "entries",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"line": 63,
											"character": 4
										}
									]
								},
								{
									"id": 449,
									"name": "keys",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"line": 68,
											"character": 4
										}
									]
								},
								{
									"id": 450,
									"name": "values",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"line": 73,
											"character": 4
										}
									]
								},
								{
									"id": 458,
									"name": "[unscopables]",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isExternal": true,
										"isOptional": true,
										"isReadonly": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Is an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement."
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
											"line": 97,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 451,
									"name": "includes",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2016.array.include.d.ts",
											"line": 25,
											"character": 4
										}
									]
								},
								{
									"id": 452,
									"name": "flatMap",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
											"line": 68,
											"character": 4
										}
									]
								},
								{
									"id": 453,
									"name": "flat",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
											"line": 79,
											"character": 4
										}
									]
								},
								{
									"id": 454,
									"name": "at",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2022.array.d.ts",
											"line": 24,
											"character": 4
										}
									]
								},
								{
									"id": 455,
									"name": "findLast",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
											"line": 29,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
											"line": 30,
											"character": 4
										}
									]
								},
								{
									"id": 456,
									"name": "findLastIndex",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
											"line": 41,
											"character": 4
										}
									]
								},
								{
									"id": 422,
									"name": "length",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Gets or sets the length of the array. This is a number one higher than the highest index in the array."
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1305,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 423,
									"name": "toString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1309,
											"character": 4
										}
									]
								},
								{
									"id": 424,
									"name": "toLocaleString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1313,
											"character": 4
										}
									]
								},
								{
									"id": 425,
									"name": "pop",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1318,
											"character": 4
										}
									]
								},
								{
									"id": 426,
									"name": "push",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1323,
											"character": 4
										}
									]
								},
								{
									"id": 427,
									"name": "concat",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1329,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1335,
											"character": 4
										}
									]
								},
								{
									"id": 428,
									"name": "join",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1340,
											"character": 4
										}
									]
								},
								{
									"id": 429,
									"name": "reverse",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1345,
											"character": 4
										}
									]
								},
								{
									"id": 430,
									"name": "shift",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1350,
											"character": 4
										}
									]
								},
								{
									"id": 431,
									"name": "slice",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1360,
											"character": 4
										}
									]
								},
								{
									"id": 432,
									"name": "sort",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1371,
											"character": 4
										}
									]
								},
								{
									"id": 433,
									"name": "splice",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1378,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1386,
											"character": 4
										}
									]
								},
								{
									"id": 434,
									"name": "unshift",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1391,
											"character": 4
										}
									]
								},
								{
									"id": 435,
									"name": "indexOf",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1397,
											"character": 4
										}
									]
								},
								{
									"id": 436,
									"name": "lastIndexOf",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1403,
											"character": 4
										}
									]
								},
								{
									"id": 437,
									"name": "every",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1412,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1421,
											"character": 4
										}
									]
								},
								{
									"id": 438,
									"name": "some",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1430,
											"character": 4
										}
									]
								},
								{
									"id": 439,
									"name": "forEach",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1436,
											"character": 4
										}
									]
								},
								{
									"id": 440,
									"name": "map",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1442,
											"character": 4
										}
									]
								},
								{
									"id": 441,
									"name": "filter",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1448,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1454,
											"character": 4
										}
									]
								},
								{
									"id": 442,
									"name": "reduce",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1460,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1461,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1467,
											"character": 4
										}
									]
								},
								{
									"id": 443,
									"name": "reduceRight",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1473,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1474,
											"character": 4
										},
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1480,
											"character": 4
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										458,
										422
									]
								},
								{
									"title": "Methods",
									"children": [
										444,
										445,
										446,
										447,
										457,
										448,
										449,
										450,
										451,
										452,
										453,
										454,
										455,
										456,
										423,
										424,
										425,
										426,
										427,
										428,
										429,
										430,
										431,
										432,
										433,
										434,
										435,
										436,
										437,
										438,
										439,
										440,
										441,
										442,
										443
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
									"line": 97,
									"character": 35
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.[unscopables]"
					}
				},
				{
					"id": 143,
					"name": "[species]",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
							"line": 316,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "ArrayConstructor"
						},
						"name": "ArrayConstructor",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.[species]"
					}
				},
				{
					"id": 366,
					"name": "includes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2016.array.include.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 367,
							"name": "includes",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether an array includes a certain element, returning true or false as appropriate."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2016.array.include.d.ts",
									"line": 25,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 368,
									"name": "searchElement",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The element to search for."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 369,
									"name": "fromIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The position in this array at which to begin searching for searchElement."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.includes"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.includes"
					}
				},
				{
					"id": 370,
					"name": "flatMap",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
							"line": 68,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 371,
							"name": "flatMap",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls a defined callback function on each element of an array. Then, flattens the result into\na new array.\nThis is identical to a map followed by flat with depth 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
									"line": 68,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 372,
									"name": "U",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 373,
									"name": "This",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							],
							"parameters": [
								{
									"id": 374,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The flatMap method calls the\ncallback function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 375,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
													"line": 69,
													"character": 18
												}
											],
											"signatures": [
												{
													"id": 376,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
															"line": 69,
															"character": 18
														}
													],
													"parameters": [
														{
															"id": 377,
															"name": "this",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": -1,
																"name": "This",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 378,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 379,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 380,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": -1,
																"name": "U",
																"refersToTypeParameter": true
															},
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "array",
																	"elementType": {
																		"type": "reference",
																		"target": -1,
																		"name": "U",
																		"refersToTypeParameter": true
																	}
																}
															}
														]
													}
												}
											]
										}
									}
								},
								{
									"id": 381,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the callback function. If\nthisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "This",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "U",
									"refersToTypeParameter": true
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.flatMap"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.flatMap"
					}
				},
				{
					"id": 382,
					"name": "flat",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
							"line": 79,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 383,
							"name": "flat",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a new array with all sub-array elements concatenated into it recursively up to the\nspecified depth."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2019.array.d.ts",
									"line": 79,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 384,
									"name": "A",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 385,
									"name": "D",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"default": {
										"type": "literal",
										"value": 1
									}
								}
							],
							"parameters": [
								{
									"id": 386,
									"name": "this",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "A",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 387,
									"name": "depth",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The maximum recursion depth"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "D",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../node_modules/typescript/lib/lib.es2019.array.d.ts",
										"qualifiedName": "FlatArray"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "A",
											"refersToTypeParameter": true
										},
										{
											"type": "reference",
											"target": -1,
											"name": "D",
											"refersToTypeParameter": true
										}
									],
									"name": "FlatArray",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.flat"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.flat"
					}
				},
				{
					"id": 388,
					"name": "at",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2022.array.d.ts",
							"line": 24,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 389,
							"name": "at",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the item located at the specified index."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2022.array.d.ts",
									"line": 24,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 390,
									"name": "index",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The zero-based index of the desired code unit. A negative index will count back from the last item."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.at"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.at"
					}
				},
				{
					"id": 391,
					"name": "findLast",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
							"line": 29,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 392,
							"name": "findLast",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the value of the last element in the array where predicate is true, and undefined\notherwise."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 393,
									"name": "S",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 394,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "findLast calls predicate once for each element of the array, in descending\norder, until it finds one where predicate returns true. If such an element is found, findLast\nimmediately returns that element value. Otherwise, findLast returns undefined."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 395,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
													"line": 29,
													"character": 37
												}
											],
											"signatures": [
												{
													"id": 396,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
															"line": 29,
															"character": 37
														}
													],
													"parameters": [
														{
															"id": 397,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 398,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 399,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "reference",
															"target": -1,
															"name": "S",
															"refersToTypeParameter": true
														}
													}
												}
											]
										}
									}
								},
								{
									"id": 400,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": -1,
										"name": "S",
										"refersToTypeParameter": true
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.findLast"
							}
						},
						{
							"id": 401,
							"name": "findLast",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
									"line": 30,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 402,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 403,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
													"line": 30,
													"character": 24
												}
											],
											"signatures": [
												{
													"id": 404,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
															"line": 30,
															"character": 24
														}
													],
													"parameters": [
														{
															"id": 405,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 406,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 407,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 408,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.findLast"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.findLast"
					}
				},
				{
					"id": 409,
					"name": "findLastIndex",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 410,
							"name": "findLastIndex",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the index of the last element in the array where predicate is true, and -1\notherwise."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
									"line": 41,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 411,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "findLastIndex calls predicate once for each element of the array, in descending\norder, until it finds one where predicate returns true. If such an element is found,\nfindLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 412,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
													"line": 41,
													"character": 29
												}
											],
											"signatures": [
												{
													"id": 413,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es2023.array.d.ts",
															"line": 41,
															"character": 29
														}
													],
													"parameters": [
														{
															"id": 414,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 415,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 416,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 417,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.findLastIndex"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.findLastIndex"
					}
				},
				{
					"id": 151,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets or sets the length of the array. This is a number one higher than the highest index in the array."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1305,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.length"
					}
				},
				{
					"id": 152,
					"name": "toString",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1309,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 153,
							"name": "toString",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a string representation of an array."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1309,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.toString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.toString"
					}
				},
				{
					"id": 154,
					"name": "toLocaleString",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1313,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 155,
							"name": "toLocaleString",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a string representation of an array. The elements are converted to string using their toLocaleString methods."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1313,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.toLocaleString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.toLocaleString"
					}
				},
				{
					"id": 156,
					"name": "pop",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1318,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 157,
							"name": "pop",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes the last element from an array and returns it.\nIf the array is empty, undefined is returned and the array is not modified."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1318,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.pop"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.pop"
					}
				},
				{
					"id": 158,
					"name": "push",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1323,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 159,
							"name": "push",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Appends new elements to the end of an array, and returns the new length of the array."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1323,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 160,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "New elements to add to the array."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.push"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.push"
					}
				},
				{
					"id": 161,
					"name": "concat",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1329,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1335,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 162,
							"name": "concat",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Combines two or more arrays.\nThis method returns a new array without modifying any existing arrays."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1329,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 163,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Additional arrays and/or items to add to the end of the array."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "ConcatArray"
											},
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												}
											],
											"name": "ConcatArray",
											"package": "typescript"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.concat"
							}
						},
						{
							"id": 164,
							"name": "concat",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Combines two or more arrays.\nThis method returns a new array without modifying any existing arrays."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1335,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 165,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Additional arrays and/or items to add to the end of the array."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "ConcatArray"
													},
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														}
													],
													"name": "ConcatArray",
													"package": "typescript"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.concat"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.concat"
					}
				},
				{
					"id": 166,
					"name": "join",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1340,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 167,
							"name": "join",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds all the elements of an array into a string, separated by the specified separator string."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1340,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 168,
									"name": "separator",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A string used to separate one element of the array from the next in the resulting string. If omitted, the array elements are separated with a comma."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.join"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.join"
					}
				},
				{
					"id": 169,
					"name": "reverse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1345,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 170,
							"name": "reverse",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Reverses the elements in an array in place.\nThis method mutates the array and returns a reference to the same array."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1345,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.reverse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.reverse"
					}
				},
				{
					"id": 171,
					"name": "shift",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1350,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 172,
							"name": "shift",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes the first element from an array and returns it.\nIf the array is empty, undefined is returned and the array is not modified."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1350,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.shift"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.shift"
					}
				},
				{
					"id": 173,
					"name": "slice",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1360,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 174,
							"name": "slice",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of a section of an array.\nFor both start and end, a negative index can be used to indicate an offset from the end of the array.\nFor example, -2 refers to the second to last element of the array."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1360,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 175,
									"name": "start",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The beginning index of the specified portion of the array.\nIf start is undefined, then the slice begins at index 0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 176,
									"name": "end",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The end index of the specified portion of the array. This is exclusive of the element at the index 'end'.\nIf end is undefined, then the slice extends to the end of the array."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.slice"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.slice"
					}
				},
				{
					"id": 177,
					"name": "sort",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1371,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 178,
							"name": "sort",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sorts an array in place.\nThis method mutates the array and returns a reference to the same array."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1371,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 179,
									"name": "compareFn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function used to determine the order of the elements. It is expected to return\na negative value if the first argument is less than the second argument, zero if they're equal, and a positive\nvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\n"
											},
											{
												"kind": "code",
												"text": "```ts\n[11,2,22,1].sort((a, b) => a - b)\n```"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 180,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1371,
													"character": 21
												}
											],
											"signatures": [
												{
													"id": 181,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1371,
															"character": 21
														}
													],
													"parameters": [
														{
															"id": 182,
															"name": "a",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 183,
															"name": "b",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 108,
								"name": "StringArray",
								"package": "typedoc-example"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.sort"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.sort"
					}
				},
				{
					"id": 184,
					"name": "splice",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1378,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1386,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 185,
							"name": "splice",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An array containing the elements that were deleted."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1378,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 186,
									"name": "start",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The zero-based location in the array from which to start removing elements."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 187,
									"name": "deleteCount",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number of elements to remove."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.splice"
							}
						},
						{
							"id": 188,
							"name": "splice",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An array containing the elements that were deleted."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1386,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 189,
									"name": "start",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The zero-based location in the array from which to start removing elements."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 190,
									"name": "deleteCount",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number of elements to remove."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 191,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Elements to insert into the array in place of the deleted elements."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.splice"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.splice"
					}
				},
				{
					"id": 192,
					"name": "unshift",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1391,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 193,
							"name": "unshift",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Inserts new elements at the start of an array, and returns the new length of the array."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1391,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 194,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Elements to insert at the start of the array."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.unshift"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.unshift"
					}
				},
				{
					"id": 195,
					"name": "indexOf",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1397,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 196,
							"name": "indexOf",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the index of the first occurrence of a value in an array, or -1 if it is not present."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1397,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 197,
									"name": "searchElement",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to locate in the array."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 198,
									"name": "fromIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.indexOf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.indexOf"
					}
				},
				{
					"id": 199,
					"name": "lastIndexOf",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1403,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 200,
							"name": "lastIndexOf",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the index of the last occurrence of a specified value in an array, or -1 if it is not present."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1403,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 201,
									"name": "searchElement",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to locate in the array."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 202,
									"name": "fromIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The array index at which to begin searching backward. If fromIndex is omitted, the search starts at the last index in the array."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.lastIndexOf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.lastIndexOf"
					}
				},
				{
					"id": 203,
					"name": "every",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1412,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1421,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 204,
							"name": "every",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether all the members of an array satisfy the specified test."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1412,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 205,
									"name": "S",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 206,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 207,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1412,
													"character": 34
												}
											],
											"signatures": [
												{
													"id": 208,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1412,
															"character": 34
														}
													],
													"parameters": [
														{
															"id": 209,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 210,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 211,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "reference",
															"target": -1,
															"name": "S",
															"refersToTypeParameter": true
														}
													}
												}
											]
										}
									}
								},
								{
									"id": 212,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "this",
								"asserts": false,
								"targetType": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": -1,
										"name": "S",
										"refersToTypeParameter": true
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.every"
							}
						},
						{
							"id": 213,
							"name": "every",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether all the members of an array satisfy the specified test."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1421,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 214,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 215,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1421,
													"character": 21
												}
											],
											"signatures": [
												{
													"id": 216,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1421,
															"character": 21
														}
													],
													"parameters": [
														{
															"id": 217,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 218,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 219,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 220,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.every"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.every"
					}
				},
				{
					"id": 221,
					"name": "some",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1430,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 222,
							"name": "some",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether the specified callback function returns true for any element of an array."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1430,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 223,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The some method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value true, or until the end of the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 224,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1430,
													"character": 20
												}
											],
											"signatures": [
												{
													"id": 225,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1430,
															"character": 20
														}
													],
													"parameters": [
														{
															"id": 226,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 227,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 228,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 229,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.some"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.some"
					}
				},
				{
					"id": 230,
					"name": "forEach",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1436,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 231,
							"name": "forEach",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Performs the specified action for each element in an array."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1436,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 232,
									"name": "callbackfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 233,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1436,
													"character": 24
												}
											],
											"signatures": [
												{
													"id": 234,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1436,
															"character": 24
														}
													],
													"parameters": [
														{
															"id": 235,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 236,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 237,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 238,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.forEach"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.forEach"
					}
				},
				{
					"id": 239,
					"name": "map",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1442,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 240,
							"name": "map",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls a defined callback function on each element of an array, and returns an array that contains the results."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1442,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 241,
									"name": "U",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 242,
									"name": "callbackfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 243,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1442,
													"character": 23
												}
											],
											"signatures": [
												{
													"id": 244,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1442,
															"character": 23
														}
													],
													"parameters": [
														{
															"id": 245,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 246,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 247,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": -1,
														"name": "U",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								},
								{
									"id": 248,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "U",
									"refersToTypeParameter": true
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.map"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.map"
					}
				},
				{
					"id": 249,
					"name": "filter",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1448,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1454,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 250,
							"name": "filter",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the elements of an array that meet the condition specified in a callback function."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1448,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 251,
									"name": "S",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 252,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 253,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1448,
													"character": 35
												}
											],
											"signatures": [
												{
													"id": 254,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1448,
															"character": 35
														}
													],
													"parameters": [
														{
															"id": 255,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 256,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 257,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "reference",
															"target": -1,
															"name": "S",
															"refersToTypeParameter": true
														}
													}
												}
											]
										}
									}
								},
								{
									"id": 258,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "S",
									"refersToTypeParameter": true
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.filter"
							}
						},
						{
							"id": 259,
							"name": "filter",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the elements of an array that meet the condition specified in a callback function."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1454,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 260,
									"name": "predicate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 261,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1454,
													"character": 22
												}
											],
											"signatures": [
												{
													"id": 262,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1454,
															"character": 22
														}
													],
													"parameters": [
														{
															"id": 263,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 264,
															"name": "index",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 265,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								},
								{
									"id": 266,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.filter"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.filter"
					}
				},
				{
					"id": 267,
					"name": "reduce",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1460,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1461,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1467,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 268,
							"name": "reduce",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1460,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 269,
									"name": "callbackfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 270,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1460,
													"character": 23
												}
											],
											"signatures": [
												{
													"id": 271,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1460,
															"character": 23
														}
													],
													"parameters": [
														{
															"id": 272,
															"name": "previousValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 273,
															"name": "currentValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 274,
															"name": "currentIndex",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 275,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.reduce"
							}
						},
						{
							"id": 276,
							"name": "reduce",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1461,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 277,
									"name": "callbackfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 278,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1461,
													"character": 23
												}
											],
											"signatures": [
												{
													"id": 279,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1461,
															"character": 23
														}
													],
													"parameters": [
														{
															"id": 280,
															"name": "previousValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 281,
															"name": "currentValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 282,
															"name": "currentIndex",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 283,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 284,
									"name": "initialValue",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.reduce"
							}
						},
						{
							"id": 285,
							"name": "reduce",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1467,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 286,
									"name": "U",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 287,
									"name": "callbackfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 288,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1467,
													"character": 26
												}
											],
											"signatures": [
												{
													"id": 289,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1467,
															"character": 26
														}
													],
													"parameters": [
														{
															"id": 290,
															"name": "previousValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": -1,
																"name": "U",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 291,
															"name": "currentValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 292,
															"name": "currentIndex",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 293,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": -1,
														"name": "U",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								},
								{
									"id": 294,
									"name": "initialValue",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "U",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": -1,
								"name": "U",
								"refersToTypeParameter": true
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.reduce"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.reduce"
					}
				},
				{
					"id": 295,
					"name": "reduceRight",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1473,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1474,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1480,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 296,
							"name": "reduceRight",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1473,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 297,
									"name": "callbackfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 298,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1473,
													"character": 28
												}
											],
											"signatures": [
												{
													"id": 299,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1473,
															"character": 28
														}
													],
													"parameters": [
														{
															"id": 300,
															"name": "previousValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 301,
															"name": "currentValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 302,
															"name": "currentIndex",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 303,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.reduceRight"
							}
						},
						{
							"id": 304,
							"name": "reduceRight",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1474,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 305,
									"name": "callbackfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 306,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1474,
													"character": 28
												}
											],
											"signatures": [
												{
													"id": 307,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1474,
															"character": 28
														}
													],
													"parameters": [
														{
															"id": 308,
															"name": "previousValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 309,
															"name": "currentValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 310,
															"name": "currentIndex",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 311,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 312,
									"name": "initialValue",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.reduceRight"
							}
						},
						{
							"id": 313,
							"name": "reduceRight",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1480,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 314,
									"name": "U",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 315,
									"name": "callbackfn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 316,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1480,
													"character": 31
												}
											],
											"signatures": [
												{
													"id": 317,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"line": 1480,
															"character": 31
														}
													],
													"parameters": [
														{
															"id": 318,
															"name": "previousValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": -1,
																"name": "U",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 319,
															"name": "currentValue",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 320,
															"name": "currentIndex",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 321,
															"name": "array",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": -1,
														"name": "U",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								},
								{
									"id": 322,
									"name": "initialValue",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "U",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": -1,
								"name": "U",
								"refersToTypeParameter": true
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.reduceRight"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.reduceRight"
					}
				},
				{
					"id": 144,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1486,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1487,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1488,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 145,
							"name": "new StringArray",
							"variant": "signature",
							"kind": 16384,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1487,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 146,
									"name": "arrayLength",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 108,
								"name": "StringArray",
								"package": "typedoc-example"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array<string>.constructor"
							}
						},
						{
							"id": 147,
							"name": "new StringArray",
							"variant": "signature",
							"kind": 16384,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1488,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 148,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 108,
								"name": "StringArray",
								"package": "typedoc-example"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array<string>.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array<string>.constructor"
					}
				},
				{
					"id": 109,
					"name": "isArray",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1492,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 110,
							"name": "isArray",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1492,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 111,
									"name": "arg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "arg",
								"asserts": false,
								"targetType": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Array.isArray"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Array.isArray"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						144
					]
				},
				{
					"title": "Properties",
					"children": [
						420,
						143,
						151
					]
				},
				{
					"title": "Methods",
					"children": [
						149,
						323,
						341,
						350,
						355,
						112,
						139,
						418,
						360,
						362,
						364,
						366,
						370,
						382,
						388,
						391,
						409,
						152,
						154,
						156,
						158,
						161,
						166,
						169,
						171,
						173,
						177,
						184,
						192,
						195,
						199,
						203,
						221,
						230,
						239,
						249,
						267,
						295,
						109
					]
				}
			],
			"sources": [
				{
					"fileName": "example/src/classes/StringArray.ts",
					"line": 14,
					"character": 13,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/classes/StringArray.ts#L14"
				}
			],
			"relevanceBoost": 1.5,
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Array"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						}
					],
					"name": "Array",
					"package": "typescript"
				}
			]
		},
		{
			"id": 597,
			"name": "SimpleEnum",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Describes the status of a delivery order."
					}
				]
			},
			"children": [
				{
					"id": 598,
					"name": "Pending",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This order has just been placed and is yet to be processed."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/enums.ts",
							"line": 4,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/enums.ts#L4"
						}
					],
					"type": {
						"type": "literal",
						"value": 0
					}
				},
				{
					"id": 599,
					"name": "InProgress",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A courier is en route delivering this order."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/enums.ts",
							"line": 7,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/enums.ts#L7"
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					}
				},
				{
					"id": 600,
					"name": "Complete",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order has been delivered."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/enums.ts",
							"line": 10,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/enums.ts#L10"
						}
					],
					"type": {
						"type": "literal",
						"value": "COMPLETE"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						598,
						599,
						600
					]
				}
			],
			"sources": [
				{
					"fileName": "example/src/enums.ts",
					"line": 2,
					"character": 12,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/enums.ts#L2"
				}
			]
		},
		{
			"id": 601,
			"name": "CrazyEnum",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "[A crazy enum from the TypeScript\nhandbook](https://www.typescriptlang.org/docs/handbook/enums.html#computed-and-constant-members).\nThis enum contains both constant and computed members.\n\nTypeDoc won't show the value of computed members since this information is\nonly available at runtime."
					}
				]
			},
			"children": [
				{
					"id": 602,
					"name": "None",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/enums.ts",
							"line": 23,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/enums.ts#L23"
						}
					],
					"type": {
						"type": "literal",
						"value": 0
					}
				},
				{
					"id": 603,
					"name": "Read",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/enums.ts",
							"line": 24,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/enums.ts#L24"
						}
					],
					"type": {
						"type": "literal",
						"value": 2
					}
				},
				{
					"id": 604,
					"name": "Write",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/enums.ts",
							"line": 25,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/enums.ts#L25"
						}
					],
					"type": {
						"type": "literal",
						"value": 4
					}
				},
				{
					"id": 605,
					"name": "ReadWrite",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/enums.ts",
							"line": 26,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/enums.ts#L26"
						}
					],
					"type": {
						"type": "literal",
						"value": 6
					}
				},
				{
					"id": 606,
					"name": "ComputedMember",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/enums.ts",
							"line": 28,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/enums.ts#L28"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						602,
						603,
						604,
						605,
						606
					]
				}
			],
			"sources": [
				{
					"fileName": "example/src/enums.ts",
					"line": 21,
					"character": 12,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/enums.ts#L21"
				}
			]
		},
		{
			"id": 607,
			"name": "EnumLikeObject",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Since TypeScript's "
					},
					{
						"kind": "code",
						"text": "`enum`"
					},
					{
						"kind": "text",
						"text": " can be inconvenient to work with, some packages define their own enum-like objects:\n\n"
					},
					{
						"kind": "code",
						"text": "```\nexport const EnumLikeObject = {\n    Pending: 'pending',\n    InProgress: 'inProgress',\n    Completed: 'completed'\n} as const\n```"
					},
					{
						"kind": "text",
						"text": "\n\nUse the "
					},
					{
						"kind": "code",
						"text": "`@enum`"
					},
					{
						"kind": "text",
						"text": " tag to make TypeDoc document this object as an enum."
					}
				]
			},
			"children": [
				{
					"id": 608,
					"name": "Pending",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/enums.ts",
							"line": 47,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/enums.ts#L47"
						}
					],
					"type": {
						"type": "literal",
						"value": "pending"
					}
				},
				{
					"id": 609,
					"name": "InProgress",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that a courier is en route delivering this order."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/enums.ts",
							"line": 50,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/enums.ts#L50"
						}
					],
					"type": {
						"type": "literal",
						"value": "inProgress"
					}
				},
				{
					"id": 610,
					"name": "Completed",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/enums.ts",
							"line": 52,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/enums.ts#L52"
						}
					],
					"type": {
						"type": "literal",
						"value": "completed"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						608,
						609,
						610
					]
				}
			],
			"sources": [
				{
					"fileName": "example/src/enums.ts",
					"line": 46,
					"character": 13,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/enums.ts#L46"
				}
			]
		},
		{
			"id": 611,
			"name": "EnumLikeObjectNumValues",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Since TypeScript's "
					},
					{
						"kind": "code",
						"text": "`enum`"
					},
					{
						"kind": "text",
						"text": " can be inconvenient to work with, some packages define their own enum-like objects:\n\n"
					},
					{
						"kind": "code",
						"text": "```\nexport const EnumLikeObjectNumValues = {\n    Pending: 1,\n    InProgress: 2,\n    Completed: 3\n} as const\n```"
					},
					{
						"kind": "text",
						"text": "\n\nUse the "
					},
					{
						"kind": "code",
						"text": "`@enum`"
					},
					{
						"kind": "text",
						"text": " tag to make TypeDoc document this object as an enum."
					}
				]
			},
			"children": [
				{
					"id": 612,
					"name": "Pending",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/enums.ts",
							"line": 71,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/enums.ts#L71"
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					}
				},
				{
					"id": 613,
					"name": "InProgress",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that a courier is en route delivering this order."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/enums.ts",
							"line": 74,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/enums.ts#L74"
						}
					],
					"type": {
						"type": "literal",
						"value": 2
					}
				},
				{
					"id": 614,
					"name": "Completed",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/enums.ts",
							"line": 76,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/enums.ts#L76"
						}
					],
					"type": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						612,
						613,
						614
					]
				}
			],
			"sources": [
				{
					"fileName": "example/src/enums.ts",
					"line": 70,
					"character": 13,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/enums.ts#L70"
				}
			]
		},
		{
			"id": 1,
			"name": "sqrt",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "example/src/functions.ts",
					"line": 7,
					"character": 16,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L7"
				}
			],
			"signatures": [
				{
					"id": 2,
					"name": "sqrt",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Calculates the square root of a number."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "the square root if "
									},
									{
										"kind": "code",
										"text": "`x`"
									},
									{
										"kind": "text",
										"text": " is non-negative or "
									},
									{
										"kind": "code",
										"text": "`NaN`"
									},
									{
										"kind": "text",
										"text": " if "
									},
									{
										"kind": "code",
										"text": "`x`"
									},
									{
										"kind": "text",
										"text": " is negative."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/functions.ts",
							"line": 7,
							"character": 0,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L7"
						}
					],
					"parameters": [
						{
							"id": 3,
							"name": "x",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the number to calculate the root of."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 28,
			"name": "sqrtArrowFunction",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "example/src/functions.ts",
					"line": 25,
					"character": 13,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L25"
				}
			],
			"signatures": [
				{
					"id": 29,
					"name": "sqrtArrowFunction",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Calculates the square root of a number.\n\n"
							},
							{
								"kind": "code",
								"text": "`sqrtArrowFunction`"
							},
							{
								"kind": "text",
								"text": " is defined using a variable declaration:\n\n"
							},
							{
								"kind": "code",
								"text": "```\nexport const sqrtArrowFunction = (x: number): number => Math.sqrt(x);\n```"
							},
							{
								"kind": "text",
								"text": "\n\nTypeDoc is smart and documents "
							},
							{
								"kind": "code",
								"text": "`sqrtArrowFunction`"
							},
							{
								"kind": "text",
								"text": " as a function rather than a variable."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "the square root if "
									},
									{
										"kind": "code",
										"text": "`x`"
									},
									{
										"kind": "text",
										"text": " is non-negative or "
									},
									{
										"kind": "code",
										"text": "`NaN`"
									},
									{
										"kind": "text",
										"text": " if "
									},
									{
										"kind": "code",
										"text": "`x`"
									},
									{
										"kind": "text",
										"text": " is negative."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/functions.ts",
							"line": 25,
							"character": 33,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L25"
						}
					],
					"parameters": [
						{
							"id": 30,
							"name": "x",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the number do calculate the root of."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 4,
			"name": "concat",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "example/src/functions.ts",
					"line": 39,
					"character": 16,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L39"
				}
			],
			"signatures": [
				{
					"id": 5,
					"name": "concat",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A simple generic function that concatenates two arrays.\n\nUse ["
							},
							{
								"kind": "code",
								"text": "`@typeParam <param name>`"
							},
							{
								"kind": "text",
								"text": "](https://typedoc.org/tags/typeParam/)\nto document generic type parameters, e.g.\n\n"
							},
							{
								"kind": "code",
								"text": "```text\n@typeParam T the element type of the arrays\n```"
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/functions.ts",
							"line": 39,
							"character": 0,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L39"
						}
					],
					"typeParameter": [
						{
							"id": 6,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the element type of the arrays"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 7,
							"name": "array1",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							}
						},
						{
							"id": 8,
							"name": "array2",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						}
					}
				}
			]
		},
		{
			"id": 31,
			"name": "MakeHttpCallAOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The options type for "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "makeHttpCallA",
						"target": 9,
						"tsLinkText": ""
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 32,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/functions.ts",
							"line": 47,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L47"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33,
					"name": "method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "e.g. GET, POST, PUT, DELETE"
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/functions.ts",
							"line": 50,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L50"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 34,
					"name": "headers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "e.g. "
							},
							{
								"kind": "code",
								"text": "`{ 'Authorization': 'Bearer <access token>' }`"
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/functions.ts",
							"line": 53,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L53"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 35,
					"name": "body",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/functions.ts",
							"line": 54,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L54"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Blob"
								},
								"name": "Blob",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "FormData"
								},
								"name": "FormData",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 36,
					"name": "mode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/functions.ts",
							"line": 55,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L55"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "cors"
							},
							{
								"type": "literal",
								"value": "no-cors"
							},
							{
								"type": "literal",
								"value": "same-origin"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						32,
						33,
						34,
						35,
						36
					]
				}
			],
			"sources": [
				{
					"fileName": "example/src/functions.ts",
					"line": 46,
					"character": 17,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L46"
				}
			]
		},
		{
			"id": 9,
			"name": "makeHttpCallA",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "example/src/functions.ts",
					"line": 65,
					"character": 16,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L65"
				}
			],
			"signatures": [
				{
					"id": 10,
					"name": "makeHttpCallA",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that takes in an options object that is defined as a separate\ninterface and makes an HTTP call.\n\n**Make sure to export the options type when using this pattern.** Otherwise,\nTypeDoc will not document the options."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/functions.ts",
							"line": 65,
							"character": 0,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L65"
						}
					],
					"parameters": [
						{
							"id": 11,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 31,
								"name": "MakeHttpCallAOptions",
								"package": "typedoc-example"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Response"
								},
								"name": "Response",
								"package": "typescript"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 12,
			"name": "makeHttpCallB",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "example/src/functions.ts",
					"line": 78,
					"character": 16,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L78"
				}
			],
			"signatures": [
				{
					"id": 13,
					"name": "makeHttpCallB",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that takes in an options object and makes an HTTP call.\n\nThe options type is written directly in the function definition."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/functions.ts",
							"line": 78,
							"character": 0,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L78"
						}
					],
					"parameters": [
						{
							"id": 14,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 16,
											"name": "url",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "example/src/functions.ts",
													"line": 79,
													"character": 4,
													"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L79"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17,
											"name": "method",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "e.g. GET, POST, PUT, DELETE"
													}
												]
											},
											"sources": [
												{
													"fileName": "example/src/functions.ts",
													"line": 82,
													"character": 4,
													"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L82"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 18,
											"name": "headers",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "e.g. "
													},
													{
														"kind": "code",
														"text": "`{ 'Authorization': 'Bearer <access token>' }`"
													}
												]
											},
											"sources": [
												{
													"fileName": "example/src/functions.ts",
													"line": 85,
													"character": 4,
													"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L85"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 19,
											"name": "body",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "example/src/functions.ts",
													"line": 87,
													"character": 4,
													"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L87"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "Blob"
														},
														"name": "Blob",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "FormData"
														},
														"name": "FormData",
														"package": "typescript"
													}
												]
											}
										},
										{
											"id": 20,
											"name": "mode",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "example/src/functions.ts",
													"line": 88,
													"character": 4,
													"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L88"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "cors"
													},
													{
														"type": "literal",
														"value": "no-cors"
													},
													{
														"type": "literal",
														"value": "same-origin"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												16,
												17,
												18,
												19,
												20
											]
										}
									],
									"sources": [
										{
											"fileName": "example/src/functions.ts",
											"line": 78,
											"character": 39,
											"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L78"
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Response"
								},
								"name": "Response",
								"package": "typescript"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 21,
			"name": "overloadedFunction",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "example/src/functions.ts",
					"line": 102,
					"character": 16,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L102"
				},
				{
					"fileName": "example/src/functions.ts",
					"line": 111,
					"character": 16,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L111"
				},
				{
					"fileName": "example/src/functions.ts",
					"line": 113,
					"character": 16,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L113"
				}
			],
			"signatures": [
				{
					"id": 22,
					"name": "overloadedFunction",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stringifies and concatenates two numbers into a single string.\n\nThe documentation site allows you to toggle between the different overloads\nof a function. The implementation signature of the overloaded function is not\nincluded in the documentation."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/functions.ts",
							"line": 102,
							"character": 0,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L102"
						}
					],
					"parameters": [
						{
							"id": 23,
							"name": "a",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 24,
							"name": "b",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 25,
					"name": "overloadedFunction",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Concatenates two strings.\n\nThe documentation site allows you to toggle between the different overloads\nof a function. The implementation signature of the overloaded function is not\nincluded in the documentation."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/functions.ts",
							"line": 111,
							"character": 0,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/functions.ts#L111"
						}
					],
					"parameters": [
						{
							"id": 26,
							"name": "a",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27,
							"name": "b",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 671,
			"name": "anInternalFunction",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "example/src/internals.ts",
					"line": 8,
					"character": 16,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/internals.ts#L8"
				}
			],
			"signatures": [
				{
					"id": 672,
					"name": "anInternalFunction",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Use "
							},
							{
								"kind": "code",
								"text": "`@internal`"
							},
							{
								"kind": "text",
								"text": " to indicate that something is for internal use. If the\n"
							},
							{
								"kind": "code",
								"text": "`--excludeInternal`"
							},
							{
								"kind": "text",
								"text": " option is passed, TypeDoc will not document the given\ncode."
							}
						],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "example/src/internals.ts",
							"line": 8,
							"character": 0,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/internals.ts#L8"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 639,
			"name": "CardAProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The props type for "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "CardA",
						"target": 628,
						"tsLinkText": ""
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 640,
					"name": "variant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The theme of the card. Defaults to "
							},
							{
								"kind": "code",
								"text": "`primary`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/reactComponents.tsx",
							"line": 8,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L8"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "primary"
							},
							{
								"type": "literal",
								"value": "secondary"
							},
							{
								"type": "literal",
								"value": "success"
							},
							{
								"type": "literal",
								"value": "danger"
							},
							{
								"type": "literal",
								"value": "light"
							},
							{
								"type": "literal",
								"value": "dark"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						640
					]
				}
			],
			"sources": [
				{
					"fileName": "example/src/reactComponents.tsx",
					"line": 6,
					"character": 17,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L6"
				}
			]
		},
		{
			"id": 628,
			"name": "CardA",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "example/src/reactComponents.tsx",
					"line": 42,
					"character": 16,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L42"
				}
			],
			"relevanceBoost": 2,
			"signatures": [
				{
					"id": 629,
					"name": "CardA",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Renders a card around some content.\n\n"
							},
							{
								"kind": "code",
								"text": "```tsx\n<CardA variant=\"secondary\">\n    <h5>My Title</h5>\n    <p>My content</p>\n</CardA>\n```"
							},
							{
								"kind": "text",
								"text": "\n\nThe props type is defined as a separate interface **which must be exported!**\n\n"
							},
							{
								"kind": "code",
								"text": "```\nexport interface CardAProps {\n    // ...\n}\n\nexport function CardA({\n    children,\n    variant = \"primary\",\n}: PropsWithChildren<CardAProps>): ReactElement {\n    // ...\n}\n```"
							},
							{
								"kind": "text",
								"text": "\n\nThis is our recommended way to define React components as it makes your code\nmore readable. The minor drawback is you must click the "
							},
							{
								"kind": "code",
								"text": "`CardAProps`"
							},
							{
								"kind": "text",
								"text": " link to\nsee the component's props."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/reactComponents.tsx",
							"line": 42,
							"character": 0,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L42"
						}
					],
					"parameters": [
						{
							"id": 630,
							"name": "__namedParameters",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PropsWithChildren"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 639,
										"name": "CardAProps",
										"package": "typedoc-example"
									}
								],
								"name": "PropsWithChildren",
								"package": "@types/react",
								"qualifiedName": "React.PropsWithChildren"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactElement"
						},
						"name": "ReactElement",
						"package": "@types/react",
						"qualifiedName": "React.ReactElement"
					}
				}
			]
		},
		{
			"id": 631,
			"name": "CardB",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "example/src/reactComponents.tsx",
					"line": 74,
					"character": 16,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L74"
				}
			],
			"relevanceBoost": 2,
			"signatures": [
				{
					"id": 632,
					"name": "CardB",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Renders a card around some content.\n\n"
							},
							{
								"kind": "code",
								"text": "```tsx\n<CardB variant=\"secondary\">\n    <h5>My Title</h5>\n    <p>My content</p>\n</CardB>\n```"
							},
							{
								"kind": "text",
								"text": "\n\nThe props type is written directly in the function definition:\n\n"
							},
							{
								"kind": "code",
								"text": "```\nexport function CardB({\n    children,\n    variant = \"primary\",\n}: PropsWithChildren<{\n    variant: \"primary\" | \"secondary\" | \"success\" | \"danger\" | \"light\" | \"dark\";\n}>): ReactElement {\n    // ...\n}\n```"
							},
							{
								"kind": "text",
								"text": "\n\nThis can make the TypeDoc documentation a bit cleaner for very simple components,\nbut it makes your code less readable."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/reactComponents.tsx",
							"line": 74,
							"character": 0,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L74"
						}
					],
					"parameters": [
						{
							"id": 633,
							"name": "__namedParameters",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PropsWithChildren"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 634,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 635,
													"name": "variant",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The theme of the card. Defaults to "
															},
															{
																"kind": "code",
																"text": "`primary`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "example/src/reactComponents.tsx",
															"line": 79,
															"character": 4,
															"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L79"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "primary"
															},
															{
																"type": "literal",
																"value": "secondary"
															},
															{
																"type": "literal",
																"value": "success"
															},
															{
																"type": "literal",
																"value": "danger"
															},
															{
																"type": "literal",
																"value": "light"
															},
															{
																"type": "literal",
																"value": "dark"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														635
													]
												}
											],
											"sources": [
												{
													"fileName": "example/src/reactComponents.tsx",
													"line": 77,
													"character": 21,
													"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L77"
												}
											]
										}
									}
								],
								"name": "PropsWithChildren",
								"package": "@types/react",
								"qualifiedName": "React.PropsWithChildren"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactElement"
						},
						"name": "ReactElement",
						"package": "@types/react",
						"qualifiedName": "React.ReactElement"
					}
				}
			]
		},
		{
			"id": 641,
			"name": "EasyFormDialogProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The props type of "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "`EasyFormDialog`",
						"target": 636,
						"tsLinkText": "`EasyFormDialog`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 642,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the dialog. Can be a JSX element."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/reactComponents.tsx",
							"line": 87,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L87"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					}
				},
				{
					"id": 643,
					"name": "submitButtonText",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The text of the submit button."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/reactComponents.tsx",
							"line": 90,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L90"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 644,
					"name": "submitButtonClass",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The CSS class of the submit button."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/reactComponents.tsx",
							"line": 93,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L93"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 645,
					"name": "cancelButtonText",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The text of the cancel button. Defaults to \"Cancel\"."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/reactComponents.tsx",
							"line": 96,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L96"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 646,
					"name": "submitEnabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Allows you to disable the submit button even if "
							},
							{
								"kind": "code",
								"text": "`getSubmitEnabled()`"
							},
							{
								"kind": "text",
								"text": "\nwould return true.\n\nThis can be useful if you want to disable the submit button while a query\nis in progress."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/reactComponents.tsx",
							"line": 105,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L105"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 647,
					"name": "formIsValid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating if the form is valid."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/reactComponents.tsx",
							"line": 108,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L108"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 648,
					"name": "showValidation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating if validation feedback is being shown."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/reactComponents.tsx",
							"line": 111,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L111"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 649,
					"name": "onShowValidationChange",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/reactComponents.tsx",
							"line": 114,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L114"
						}
					],
					"signatures": [
						{
							"id": 650,
							"name": "onShowValidationChange",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A callback that fires when the dialog is submitted."
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/reactComponents.tsx",
									"line": 114,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L114"
								}
							],
							"parameters": [
								{
									"id": 651,
									"name": "showValidation",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 652,
					"name": "onSuccess",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/reactComponents.tsx",
							"line": 126,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L126"
						}
					],
					"signatures": [
						{
							"id": 653,
							"name": "onSuccess",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A callback that fires after the "
									},
									{
										"kind": "code",
										"text": "`submit`"
									},
									{
										"kind": "text",
										"text": " function succeeds.\n\nIf the "
									},
									{
										"kind": "code",
										"text": "`submit`"
									},
									{
										"kind": "text",
										"text": " function returned "
									},
									{
										"kind": "code",
										"text": "`responseData`"
									},
									{
										"kind": "text",
										"text": ", it is passed to your\n"
									},
									{
										"kind": "code",
										"text": "`onSuccess`"
									},
									{
										"kind": "text",
										"text": " function.\n\nYour "
									},
									{
										"kind": "code",
										"text": "`onSuccess`"
									},
									{
										"kind": "text",
										"text": " callback must return a promise. The submit button will\ncontinue showing a loading indicator until the promise resolves. This is\nto support refetching the data that was updated by the form submission."
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/reactComponents.tsx",
									"line": 126,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L126"
								}
							],
							"parameters": [
								{
									"id": 654,
									"name": "payload",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 655,
					"name": "onClose",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/reactComponents.tsx",
							"line": 134,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L134"
						}
					],
					"signatures": [
						{
							"id": 656,
							"name": "onClose",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A callback that fires when the dialog has completely closed. Your\n"
									},
									{
										"kind": "code",
										"text": "`onClose`"
									},
									{
										"kind": "text",
										"text": " callback should update call, for example,\n"
									},
									{
										"kind": "code",
										"text": "`setDialogVisible(false)`"
									},
									{
										"kind": "text",
										"text": " so that the "
									},
									{
										"kind": "code",
										"text": "`EasyFormDialog`"
									},
									{
										"kind": "text",
										"text": " is no longer\nrendered."
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/reactComponents.tsx",
									"line": 134,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L134"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 657,
					"name": "onSubmit",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/reactComponents.tsx",
							"line": 154,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L154"
						}
					],
					"signatures": [
						{
							"id": 658,
							"name": "onSubmit",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A callback that fires when the form is submitted. You will typically\nperform an API call in your "
									},
									{
										"kind": "code",
										"text": "`submit`"
									},
									{
										"kind": "text",
										"text": " function.\n\nYour "
									},
									{
										"kind": "code",
										"text": "`submit`"
									},
									{
										"kind": "text",
										"text": " function can optionally return an object in the shape\n\n"
									},
									{
										"kind": "code",
										"text": "```\n{\n    shouldClose?: boolean\n    responseData: unknown\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nUsing "
									},
									{
										"kind": "code",
										"text": "`formData`"
									},
									{
										"kind": "text",
										"text": " is deprecated. Use controlled components instead.\n\n"
									},
									{
										"kind": "code",
										"text": "`formData`"
									},
									{
										"kind": "text",
										"text": " will be "
									},
									{
										"kind": "code",
										"text": "`{}`"
									},
									{
										"kind": "text",
										"text": " if the optional peer dependency "
									},
									{
										"kind": "code",
										"text": "`jquery`"
									},
									{
										"kind": "text",
										"text": " is not\ninstalled."
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/reactComponents.tsx",
									"line": 154,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L154"
								}
							],
							"parameters": [
								{
									"id": 659,
									"name": "formData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 660,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 661,
																	"name": "shouldClose",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "example/src/reactComponents.tsx",
																			"line": 157,
																			"character": 20,
																			"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L157"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 662,
																	"name": "responseData",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "example/src/reactComponents.tsx",
																			"line": 158,
																			"character": 20,
																			"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L158"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		661,
																		662
																	]
																}
															],
															"sources": [
																{
																	"fileName": "example/src/reactComponents.tsx",
																	"line": 156,
																	"character": 16,
																	"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L156"
																}
															]
														}
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				},
				{
					"id": 663,
					"name": "onCancel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "example/src/reactComponents.tsx",
							"line": 167,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L167"
						}
					],
					"signatures": [
						{
							"id": 664,
							"name": "onCancel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An uncommonly-used callback that fires when the user clicks the cancel button."
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/reactComponents.tsx",
									"line": 167,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L167"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 665,
					"name": "closeRef",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This prop accepts a ref object that holds a function of type "
							},
							{
								"kind": "code",
								"text": "`() =>\nvoid`"
							},
							{
								"kind": "text",
								"text": ". You can execute the function to programmatically close the dialog:\n\n"
							},
							{
								"kind": "code",
								"text": "```\ncloseRef.current()\n```"
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/reactComponents.tsx",
							"line": 177,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L177"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.MutableRefObject"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 666,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "example/src/reactComponents.tsx",
											"line": 177,
											"character": 38,
											"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L177"
										}
									],
									"signatures": [
										{
											"id": 667,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "example/src/reactComponents.tsx",
													"line": 177,
													"character": 38,
													"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L177"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						],
						"name": "MutableRefObject",
						"package": "@types/react",
						"qualifiedName": "React.MutableRefObject"
					}
				},
				{
					"id": 668,
					"name": "modalClass",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The CSS class added to the underlying Bootstrap modal."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/reactComponents.tsx",
							"line": 180,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L180"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 669,
					"name": "focusFirst",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set to "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": " to disable the default behavior of focusing the first\ninput."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/reactComponents.tsx",
							"line": 186,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L186"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 670,
					"name": "showFooter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set to "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": " to hide the modal footer, which contains the submit and\ncancel buttons."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/reactComponents.tsx",
							"line": 192,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L192"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						642,
						643,
						644,
						645,
						646,
						647,
						648,
						665,
						668,
						669,
						670
					]
				},
				{
					"title": "Methods",
					"children": [
						649,
						652,
						655,
						657,
						663
					]
				}
			],
			"sources": [
				{
					"fileName": "example/src/reactComponents.tsx",
					"line": 85,
					"character": 17,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L85"
				}
			]
		},
		{
			"id": 636,
			"name": "EasyFormDialog",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "example/src/reactComponents.tsx",
					"line": 254,
					"character": 16,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L254"
				}
			],
			"relevanceBoost": 2,
			"signatures": [
				{
					"id": 637,
					"name": "EasyFormDialog",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An example of a complex React component.\n\nA wrapper around "
							},
							{
								"kind": "code",
								"text": "`ActionDialog`"
							},
							{
								"kind": "text",
								"text": " that removes a lot of the boilerplate needed\nfor dialogs that contain a form.\n\n"
							},
							{
								"kind": "code",
								"text": "```tsx\ninterface ExampleProps {\n    onSuccess(responseData: number): Promise<void>\n    onClose(): void\n}\n\nexport function Example({\n    onSuccess,\n    onClose,\n}: ExampleProps): ReactElement {\n    const { onChildValidChange, allFieldsValid } = useFieldValidity()\n    const [showValidation, setShowValidation] = useState(false)\n    const vProps = { showValidation, onValidChange: onChildValidChange }\n\n    const [myNumber, setMyNumber] = useState('')\n\n    async function submit() {\n        await api.product.performOperation()\n\n        return {\n            responseData: parseInt(myNumber),\n        }\n    }\n\n    return (\n        <EasyFormDialog\n            title=\"Enter a Number\"\n            submitButtonText=\"Submit\"\n            formIsValid={allFieldsValid}\n            showValidation={showValidation}\n            onShowValidationChange={setShowValidation}\n            onSubmit={submit}\n            onSuccess={onSuccess}\n            onClose={onClose}\n        >\n            <FormGroup label=\"My number\">\n                {(id) => (\n                    <ValidatedInput\n                        id={id}\n                        name=\"myNumber\"\n                        validators={[Validators.required(), Validators.integer()]}\n                        value={myNumber}\n                        onChange={setMyNumber}\n                        {...vProps}\n                    />\n                )}\n            </FormGroup>\n        </EasyFormDialog>\n    )\n}\n```"
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/reactComponents.tsx",
							"line": 254,
							"character": 0,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/reactComponents.tsx#L254"
						}
					],
					"parameters": [
						{
							"id": 638,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PropsWithChildren"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 641,
										"name": "EasyFormDialogProps",
										"package": "typedoc-example"
									}
								],
								"name": "PropsWithChildren",
								"package": "@types/react",
								"qualifiedName": "React.PropsWithChildren"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactElement"
						},
						"name": "ReactElement",
						"package": "@types/react",
						"qualifiedName": "React.ReactElement"
					}
				}
			]
		},
		{
			"id": 624,
			"name": "markdownShowcase",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "example/src/showcase.ts",
					"line": 55,
					"character": 16,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/showcase.ts#L55"
				}
			],
			"signatures": [
				{
					"id": 625,
					"name": "markdownShowcase",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "# Markdown Showcase\n\nAll comments are parsed as **Markdown**. TypeDoc uses the\n[Marked](https://github.com/markedjs/marked) markdown parser to _convert\ncomments to HTML_.\n\n## Symbol References\n\nYou can link to other classes, members or functions using an inline link tag. See the [TypeDoc\ndocumentation](https://typedoc.org/tags/link/) for\ndetails.\n\n## Code in Doc Comments\n\nSome inline code: "
							},
							{
								"kind": "code",
								"text": "`npm install --save-dev typedoc`"
							},
							{
								"kind": "text",
								"text": "\n\nA TypeScript code block:\n\n"
							},
							{
								"kind": "code",
								"text": "```\n// A fabulous variable\nconst x: number | string = 12\n```"
							},
							{
								"kind": "text",
								"text": "\n\nSee "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "`syntaxHighlightingShowcase`",
								"target": 626,
								"tsLinkText": "`syntaxHighlightingShowcase`"
							},
							{
								"kind": "text",
								"text": " for more code blocks.\n\n## A List\n\n- 🥚 ~~Eggs~~\n- 🍞 Bread\n- 🧀 Swiss cheese\n\n## A Table\n\n| Package | Version |\n| ------- | ------- |\n| lodash  | 4.17.21 |\n| react   | 17.0.2  |\n| typedoc | 0.22.4  |\n\nA Random Shakespeare Quote\n--------------------------\n\n> Rebellious subjects, enemies to peace, Profaners of this neighbour-stained\n> steel,-- Will they not hear? What, ho! you men, you beasts, That quench the\n> fire of your pernicious rage With purple fountains issuing from your veins\n\n## An Image\n\n<img src=\"media://typescript-logo.svg\" width=\"120\" />\n\nThis requires the [media option](https://typedoc.org/guides/options/#media)\nto be set."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/showcase.ts",
							"line": 55,
							"character": 0,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/showcase.ts#L55"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 626,
			"name": "syntaxHighlightingShowcase",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "example/src/showcase.ts",
					"line": 116,
					"character": 16,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/showcase.ts#L116"
				}
			],
			"signatures": [
				{
					"id": 627,
					"name": "syntaxHighlightingShowcase",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TypeDoc supports code blocks in Markdown and uses\n[Shiki](https://shiki.matsu.io/) to provide syntax highlighting.\n\nIf no language is specified, the code block is assumed to be TypeScript:\n\n"
							},
							{
								"kind": "code",
								"text": "```\n// A fabulous variable\nconst x: number | string = 12\n```"
							},
							{
								"kind": "text",
								"text": "\n\nYou can specify the language at the start of your code block like this:\n\n "
							},
							{
								"kind": "code",
								"text": "````text\n ```rust\n ````"
							},
							{
								"kind": "text",
								"text": "\n\nUse the "
							},
							{
								"kind": "code",
								"text": "`tsx`"
							},
							{
								"kind": "text",
								"text": " language to get JSX support:\n\n"
							},
							{
								"kind": "code",
								"text": "```tsx\nfunction BasicComponent(): ReactElement {\n    return <div>Test</div>\n}\n```"
							},
							{
								"kind": "text",
								"text": "\n\nYou might want to write code in the language your backend uses. Here's some\nPython:\n\n"
							},
							{
								"kind": "code",
								"text": "```python\nfor i in range(30):\n    print(i + 1)\n```"
							},
							{
								"kind": "text",
								"text": "\n\nAnd some CSS:\n\n"
							},
							{
								"kind": "code",
								"text": "```css\n.card {\n    background-color: white;\n    padding: 1rem;\n    border: 1px solid lightgray;\n}\n```"
							},
							{
								"kind": "text",
								"text": "\n\nIf you don't want syntax highlighting, use the "
							},
							{
								"kind": "code",
								"text": "`text`"
							},
							{
								"kind": "text",
								"text": " language:\n\n"
							},
							{
								"kind": "code",
								"text": "```text\npackage.json\nsrc/\n    index.ts\n    __tests__/\n        index.test.ts\n```"
							},
							{
								"kind": "text",
								"text": "\n\n[**View the full list of supported\nlanguages.**](https://github.com/shikijs/shiki/blob/main/docs/languages.md#all-languages)\nYou can also get this list by running "
							},
							{
								"kind": "code",
								"text": "`typedoc --help`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/showcase.ts",
							"line": 116,
							"character": 0,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/showcase.ts#L116"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 45,
			"name": "SimpleTypeAlias",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A simple type alias defined using the "
					},
					{
						"kind": "code",
						"text": "`type`"
					},
					{
						"kind": "text",
						"text": " keyword."
					}
				]
			},
			"sources": [
				{
					"fileName": "example/src/types.ts",
					"line": 2,
					"character": 12,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/types.ts#L2"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "boolean"
					}
				]
			}
		},
		{
			"id": 46,
			"name": "ComplexGenericTypeAlias",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A complex generic type."
					}
				]
			},
			"sources": [
				{
					"fileName": "example/src/types.ts",
					"line": 5,
					"character": 12,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/types.ts#L5"
				}
			],
			"typeParameters": [
				{
					"id": 47,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": -1,
						"name": "T",
						"refersToTypeParameter": true
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						}
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						],
						"name": "Promise",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							}
						],
						"name": "Promise",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 48,
			"name": "User",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A simple interface. Each property has its own doc comment.\n\nTypeDoc even supports doc comments on nested type definitions, as shown by the "
					},
					{
						"kind": "code",
						"text": "`name`"
					},
					{
						"kind": "text",
						"text": " property."
					}
				]
			},
			"children": [
				{
					"id": 49,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/types.ts",
							"line": 19,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/types.ts#L19"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 50,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's email address."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/types.ts",
							"line": 22,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/types.ts#L22"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 51,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's name."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/types.ts",
							"line": 25,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/types.ts#L25"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 52,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 53,
									"name": "first",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The person's given name."
											}
										]
									},
									"sources": [
										{
											"fileName": "example/src/types.ts",
											"line": 27,
											"character": 8,
											"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/types.ts#L27"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 54,
									"name": "last",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The person's family name."
											}
										]
									},
									"sources": [
										{
											"fileName": "example/src/types.ts",
											"line": 30,
											"character": 8,
											"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/types.ts#L30"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										53,
										54
									]
								}
							],
							"sources": [
								{
									"fileName": "example/src/types.ts",
									"line": 25,
									"character": 10,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/types.ts#L25"
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						49,
						50,
						51
					]
				}
			],
			"sources": [
				{
					"fileName": "example/src/types.ts",
					"line": 17,
					"character": 17,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/types.ts#L17"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 55,
					"name": "AdminUser"
				}
			]
		},
		{
			"id": 55,
			"name": "AdminUser",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An interface that extends "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "`User`",
						"target": 48,
						"tsLinkText": "`User`"
					},
					{
						"kind": "text",
						"text": " and adds more properties.\n\nNotice how TypeDoc automatically shows the inheritance hierarchy and where\neach property was originally defined."
					}
				]
			},
			"children": [
				{
					"id": 58,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/types.ts",
							"line": 19,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/types.ts#L19"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 49,
						"name": "User.id"
					}
				},
				{
					"id": 59,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's email address."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/types.ts",
							"line": 22,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/types.ts#L22"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 50,
						"name": "User.email"
					}
				},
				{
					"id": 60,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's name."
							}
						]
					},
					"sources": [
						{
							"fileName": "example/src/types.ts",
							"line": 25,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/types.ts#L25"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 61,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 62,
									"name": "first",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The person's given name."
											}
										]
									},
									"sources": [
										{
											"fileName": "example/src/types.ts",
											"line": 27,
											"character": 8,
											"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/types.ts#L27"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 63,
									"name": "last",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The person's family name."
											}
										]
									},
									"sources": [
										{
											"fileName": "example/src/types.ts",
											"line": 30,
											"character": 8,
											"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/types.ts#L30"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										62,
										63
									]
								}
							],
							"sources": [
								{
									"fileName": "example/src/types.ts",
									"line": 25,
									"character": 10,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/types.ts#L25"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 51,
						"name": "User.name"
					}
				},
				{
					"id": 56,
					"name": "administrativeArea",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/types.ts",
							"line": 41,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/types.ts#L41"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "sales"
							},
							{
								"type": "literal",
								"value": "delivery"
							},
							{
								"type": "literal",
								"value": "billing"
							}
						]
					}
				},
				{
					"id": 57,
					"name": "jobTitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "example/src/types.ts",
							"line": 42,
							"character": 4,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/types.ts#L42"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						58,
						59,
						60,
						56,
						57
					]
				}
			],
			"sources": [
				{
					"fileName": "example/src/types.ts",
					"line": 40,
					"character": 17,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/types.ts#L40"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 48,
					"name": "User",
					"package": "typedoc-example"
				}
			]
		},
		{
			"id": 37,
			"name": "PI",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A simple numeric constant."
					}
				]
			},
			"sources": [
				{
					"fileName": "example/src/variables.ts",
					"line": 2,
					"character": 13,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/variables.ts#L2"
				}
			],
			"type": {
				"type": "literal",
				"value": 3.14159265359
			},
			"defaultValue": "3.14159265359"
		},
		{
			"id": 38,
			"name": "STRING_CONSTANT",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A simple string constant."
					}
				]
			},
			"sources": [
				{
					"fileName": "example/src/variables.ts",
					"line": 5,
					"character": 13,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/variables.ts#L5"
				}
			],
			"type": {
				"type": "literal",
				"value": "FOOBAR"
			},
			"defaultValue": "\"FOOBAR\""
		},
		{
			"id": 39,
			"name": "ObjectConstant",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An plain JavaScript object using "
					},
					{
						"kind": "code",
						"text": "`as const`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"sources": [
				{
					"fileName": "example/src/variables.ts",
					"line": 8,
					"character": 13,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/variables.ts#L8"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 40,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 41,
							"name": "library",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "example/src/variables.ts",
									"line": 9,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/variables.ts#L9"
								}
							],
							"type": {
								"type": "literal",
								"value": "typedoc"
							},
							"defaultValue": "\"typedoc\""
						},
						{
							"id": 42,
							"name": "version",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "example/src/variables.ts",
									"line": 10,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/variables.ts#L10"
								}
							],
							"type": {
								"type": "literal",
								"value": "1.2.3"
							},
							"defaultValue": "\"1.2.3\""
						},
						{
							"id": 43,
							"name": "githubStars",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "How many people starred us on GitHub."
									}
								]
							},
							"sources": [
								{
									"fileName": "example/src/variables.ts",
									"line": 13,
									"character": 4,
									"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/variables.ts#L13"
								}
							],
							"type": {
								"type": "literal",
								"value": 1000000
							},
							"defaultValue": "1_000_000"
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41,
								42,
								43
							]
						}
					],
					"sources": [
						{
							"fileName": "example/src/variables.ts",
							"line": 8,
							"character": 30,
							"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/variables.ts#L8"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 44,
			"name": "E",
			"variant": "declaration",
			"kind": 32,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An exported variable defined with "
					},
					{
						"kind": "code",
						"text": "`let`"
					},
					{
						"kind": "text",
						"text": ".\n\nThis pattern should generally be avoided because the variable can be reassigned."
					}
				]
			},
			"sources": [
				{
					"fileName": "example/src/variables.ts",
					"line": 22,
					"character": 11,
					"url": "https://github.com/TypeStrong/typedoc/blob/v0.24.7/example/src/variables.ts#L22"
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "number"
			},
			"defaultValue": "2.718281828459045235"
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"children": [
				597,
				601,
				607,
				611
			]
		},
		{
			"title": "Classes",
			"children": [
				459,
				64,
				86,
				108
			]
		},
		{
			"title": "Interfaces",
			"children": [
				31,
				639,
				641,
				48,
				55
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				45,
				46
			]
		},
		{
			"title": "Variables",
			"children": [
				37,
				38,
				39,
				44
			]
		},
		{
			"title": "Functions",
			"children": [
				615,
				1,
				28,
				4,
				9,
				12,
				21,
				671,
				628,
				631,
				636,
				624,
				626
			]
		}
	],
	"categories": [
		{
			"title": "Collection",
			"children": [
				615
			]
		},
		{
			"title": "Component",
			"children": [
				628,
				631,
				636
			]
		},
		{
			"title": "Model",
			"children": [
				64
			]
		},
		{
			"title": "Other",
			"children": [
				459,
				86,
				108,
				597,
				601,
				607,
				611,
				1,
				28,
				4,
				31,
				9,
				12,
				21,
				671,
				639,
				641,
				624,
				626,
				45,
				46,
				48,
				55,
				37,
				38,
				39,
				44
			]
		}
	],
	"packageName": "typedoc-example",
	"readme": [
		{
			"kind": "text",
			"text": "# The TypeDoc Example\n\nWelcome to the TypeDoc example! TypeDoc is a documentation generator for\nTypeScript.\n\nTypeDoc automatically documents every variable, function, and class\nthat is exported by your project. You can add explanations and examples to your\ndocumentation site by annotating your code with doc comments, e.g.\n\n"
		},
		{
			"kind": "code",
			"text": "```\n/**\n * Calculates the square root of a number.\n *\n * @param x the number to calculate the root of.\n * @returns the square root if `x` is non-negative or `NaN` if `x` is negative.\n */\nexport function sqrt(x: number): number {\n    return Math.sqrt(x);\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\nThis project shows off some of TypeDoc's features:\n\n-   Built-in support for various TypeScript language constructs\n-   Markdown in doc comments\n-   Syntax highligting in code blocks\n\n## Index of Examples\n\n**Click the \"Exports\" link in the sidebar to see a complete list of everything in\nthe package.**\n\nHere are some examples we wanted to highlight:\n\n### Rendering\n\n-   Markdown showcase: "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`markdownShowcase`",
			"target": 624
		},
		{
			"kind": "text",
			"text": "\n-   Syntax highlighting showcase: "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`syntaxHighlightingShowcase`",
			"target": 626
		},
		{
			"kind": "text",
			"text": "\n\n### Functions\n\n-   Simple functions: "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`sqrt`",
			"target": 1
		},
		{
			"kind": "text",
			"text": " and "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`sqrtArrowFunction`",
			"target": 28
		},
		{
			"kind": "text",
			"text": "\n-   A generic function: "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`concat`",
			"target": 4
		},
		{
			"kind": "text",
			"text": "\n-   Functions that take an options object: "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`makeHttpCallA`",
			"target": 9
		},
		{
			"kind": "text",
			"text": " and "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`makeHttpCallB`",
			"target": 12
		},
		{
			"kind": "text",
			"text": "\n-   An overloaded function: "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`overloadedFunction`",
			"target": 21
		},
		{
			"kind": "text",
			"text": "\n-   An external function exported under a different name: "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`lodashSortBy`",
			"target": 615
		},
		{
			"kind": "text",
			"text": "\n\n### Types\n\n-   Type aliases: "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`SimpleTypeAlias`",
			"target": 45
		},
		{
			"kind": "text",
			"text": " and "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`ComplexGenericTypeAlias`",
			"target": 46
		},
		{
			"kind": "text",
			"text": "\n-   Interfaces: "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`User`",
			"target": 48
		},
		{
			"kind": "text",
			"text": " and "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`AdminUser`",
			"target": 55
		},
		{
			"kind": "text",
			"text": "\n\n### Classes\n\n-   A basic class: "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`Customer`",
			"target": 64
		},
		{
			"kind": "text",
			"text": "\n-   A subclass: "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`DeliveryCustomer`",
			"target": 86
		},
		{
			"kind": "text",
			"text": "\n-   A complex class: "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`CancellablePromise`",
			"target": 459
		},
		{
			"kind": "text",
			"text": "\n-   A class that extends a built-in generic type: "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`StringArray`",
			"target": 108
		},
		{
			"kind": "text",
			"text": "\n\n### Enums\n\n-   A basic enum: "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`SimpleEnum`",
			"target": 597
		},
		{
			"kind": "text",
			"text": "\n-   Using the "
		},
		{
			"kind": "code",
			"text": "`@enum`"
		},
		{
			"kind": "text",
			"text": " tag: "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`EnumLikeObject`",
			"target": 607
		},
		{
			"kind": "text",
			"text": "\n\n### Variables\n\n-   "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`PI`",
			"target": 37
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`STRING_CONSTANT`",
			"target": 38
		},
		{
			"kind": "text",
			"text": ", and "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`ObjectConstant`",
			"target": 39
		},
		{
			"kind": "text",
			"text": "\n\n### React Components\n\n-   Basic React components: "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`CardA`",
			"target": 628
		},
		{
			"kind": "text",
			"text": " and "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`CardB`",
			"target": 631
		},
		{
			"kind": "text",
			"text": "\n-   A complex React component: "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`EasyFormDialog`",
			"target": 636
		},
		{
			"kind": "text",
			"text": " and "
		},
		{
			"kind": "inline-tag",
			"tag": "@link",
			"text": "`EasyFormDialogProps`",
			"target": 641
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "sqrt"
		},
		"2": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "sqrt"
		},
		"3": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "x"
		},
		"4": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "concat"
		},
		"5": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "concat"
		},
		"6": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "T"
		},
		"7": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "array1"
		},
		"8": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "array2"
		},
		"9": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "makeHttpCallA"
		},
		"10": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "makeHttpCallA"
		},
		"11": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "options"
		},
		"12": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "makeHttpCallB"
		},
		"13": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "makeHttpCallB"
		},
		"14": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "options"
		},
		"15": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "__type"
		},
		"16": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "__type.url"
		},
		"17": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "__type.method"
		},
		"18": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "__type.headers"
		},
		"19": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "__type.body"
		},
		"20": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "__type.mode"
		},
		"21": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "overloadedFunction"
		},
		"22": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "overloadedFunction"
		},
		"23": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "a"
		},
		"24": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "b"
		},
		"25": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "overloadedFunction"
		},
		"26": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "a"
		},
		"27": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "b"
		},
		"28": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "sqrtArrowFunction"
		},
		"29": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "sqrtArrowFunction"
		},
		"30": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "x"
		},
		"31": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "MakeHttpCallAOptions"
		},
		"32": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "MakeHttpCallAOptions.url"
		},
		"33": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "MakeHttpCallAOptions.method"
		},
		"34": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "MakeHttpCallAOptions.headers"
		},
		"35": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "MakeHttpCallAOptions.body"
		},
		"36": {
			"sourceFileName": "src/functions.ts",
			"qualifiedName": "MakeHttpCallAOptions.mode"
		},
		"37": {
			"sourceFileName": "src/variables.ts",
			"qualifiedName": "PI"
		},
		"38": {
			"sourceFileName": "src/variables.ts",
			"qualifiedName": "STRING_CONSTANT"
		},
		"39": {
			"sourceFileName": "src/variables.ts",
			"qualifiedName": "ObjectConstant"
		},
		"40": {
			"sourceFileName": "src/variables.ts",
			"qualifiedName": "__object"
		},
		"41": {
			"sourceFileName": "src/variables.ts",
			"qualifiedName": "__object.library"
		},
		"42": {
			"sourceFileName": "src/variables.ts",
			"qualifiedName": "__object.version"
		},
		"43": {
			"sourceFileName": "src/variables.ts",
			"qualifiedName": "__object.githubStars"
		},
		"44": {
			"sourceFileName": "src/variables.ts",
			"qualifiedName": "E"
		},
		"45": {
			"sourceFileName": "src/types.ts",
			"qualifiedName": "SimpleTypeAlias"
		},
		"46": {
			"sourceFileName": "src/types.ts",
			"qualifiedName": "ComplexGenericTypeAlias"
		},
		"47": {
			"sourceFileName": "src/types.ts",
			"qualifiedName": "T"
		},
		"48": {
			"sourceFileName": "src/types.ts",
			"qualifiedName": "User"
		},
		"49": {
			"sourceFileName": "src/types.ts",
			"qualifiedName": "User.id"
		},
		"50": {
			"sourceFileName": "src/types.ts",
			"qualifiedName": "User.email"
		},
		"51": {
			"sourceFileName": "src/types.ts",
			"qualifiedName": "User.name"
		},
		"52": {
			"sourceFileName": "src/types.ts",
			"qualifiedName": "__type"
		},
		"53": {
			"sourceFileName": "src/types.ts",
			"qualifiedName": "__type.first"
		},
		"54": {
			"sourceFileName": "src/types.ts",
			"qualifiedName": "__type.last"
		},
		"55": {
			"sourceFileName": "src/types.ts",
			"qualifiedName": "AdminUser"
		},
		"56": {
			"sourceFileName": "src/types.ts",
			"qualifiedName": "AdminUser.administrativeArea"
		},
		"57": {
			"sourceFileName": "src/types.ts",
			"qualifiedName": "AdminUser.jobTitle"
		},
		"58": {
			"sourceFileName": "src/types.ts",
			"qualifiedName": "User.id"
		},
		"59": {
			"sourceFileName": "src/types.ts",
			"qualifiedName": "User.email"
		},
		"60": {
			"sourceFileName": "src/types.ts",
			"qualifiedName": "User.name"
		},
		"61": {
			"sourceFileName": "src/types.ts",
			"qualifiedName": "__type"
		},
		"62": {
			"sourceFileName": "src/types.ts",
			"qualifiedName": "__type.first"
		},
		"63": {
			"sourceFileName": "src/types.ts",
			"qualifiedName": "__type.last"
		},
		"64": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer"
		},
		"65": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer.__constructor"
		},
		"66": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer"
		},
		"67": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "id"
		},
		"68": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "name"
		},
		"69": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "nextOrderNumber"
		},
		"70": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer.id"
		},
		"71": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer.name"
		},
		"72": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer.contactName"
		},
		"73": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer._nextOrderNumber"
		},
		"74": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer.nextOrderNumber"
		},
		"75": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer.nextOrderNumber"
		},
		"76": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer.nextOrderNumber"
		},
		"77": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "value"
		},
		"78": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer.onOrderPlaced"
		},
		"79": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer.onOrderPlaced"
		},
		"80": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer.onOrderPlacedArrowFunction"
		},
		"81": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer.onOrderPlacedArrowFunction"
		},
		"82": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer.isValid"
		},
		"83": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer.isValid"
		},
		"84": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer.doInternalStuff"
		},
		"85": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer.doInternalStuff"
		},
		"86": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "DeliveryCustomer"
		},
		"87": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "DeliveryCustomer.__constructor"
		},
		"88": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "DeliveryCustomer"
		},
		"89": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "id"
		},
		"90": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "name"
		},
		"91": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "nextOrderNumber"
		},
		"92": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "subscriptionType"
		},
		"93": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "DeliveryCustomer.preferredCourierId"
		},
		"94": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "DeliveryCustomer.subscriptionType"
		},
		"95": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "DeliveryCustomer.isValid"
		},
		"96": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "DeliveryCustomer.isValid"
		},
		"97": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer.id"
		},
		"98": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer.name"
		},
		"99": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer.contactName"
		},
		"100": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer.nextOrderNumber"
		},
		"101": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer.nextOrderNumber"
		},
		"102": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer.nextOrderNumber"
		},
		"103": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "value"
		},
		"104": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer.onOrderPlaced"
		},
		"105": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer.onOrderPlaced"
		},
		"106": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer.onOrderPlacedArrowFunction"
		},
		"107": {
			"sourceFileName": "src/classes/Customer.ts",
			"qualifiedName": "Customer.onOrderPlacedArrowFunction"
		},
		"108": {
			"sourceFileName": "src/classes/StringArray.ts",
			"qualifiedName": "StringArray"
		},
		"109": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "ArrayConstructor.isArray"
		},
		"110": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "ArrayConstructor.isArray"
		},
		"111": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "arg"
		},
		"112": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "ArrayConstructor.from"
		},
		"113": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "ArrayConstructor.from"
		},
		"114": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "T"
		},
		"115": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "arrayLike"
		},
		"116": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "ArrayConstructor.from"
		},
		"117": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "T"
		},
		"118": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "U"
		},
		"119": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "arrayLike"
		},
		"120": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "mapfn"
		},
		"121": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "__type"
		},
		"122": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "__type"
		},
		"123": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "v"
		},
		"124": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "k"
		},
		"125": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "thisArg"
		},
		"126": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
			"qualifiedName": "ArrayConstructor.from"
		},
		"127": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
			"qualifiedName": "T"
		},
		"128": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
			"qualifiedName": "iterable"
		},
		"129": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
			"qualifiedName": "ArrayConstructor.from"
		},
		"130": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
			"qualifiedName": "T"
		},
		"131": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
			"qualifiedName": "U"
		},
		"132": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
			"qualifiedName": "iterable"
		},
		"133": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
			"qualifiedName": "mapfn"
		},
		"134": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
			"qualifiedName": "__type"
		},
		"135": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
			"qualifiedName": "__type"
		},
		"136": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
			"qualifiedName": "v"
		},
		"137": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
			"qualifiedName": "k"
		},
		"138": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
			"qualifiedName": "thisArg"
		},
		"139": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "ArrayConstructor.of"
		},
		"140": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "ArrayConstructor.of"
		},
		"141": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "T"
		},
		"142": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "items"
		},
		"143": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
			"qualifiedName": "ArrayConstructor.[species]"
		},
		"144": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "ArrayConstructor.__new"
		},
		"145": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "StringArray"
		},
		"146": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "arrayLength"
		},
		"147": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "StringArray"
		},
		"148": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "items"
		},
		"149": {
			"sourceFileName": "src/classes/StringArray.ts",
			"qualifiedName": "StringArray.customMethod"
		},
		"150": {
			"sourceFileName": "src/classes/StringArray.ts",
			"qualifiedName": "StringArray.customMethod"
		},
		"151": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.length"
		},
		"152": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.toString"
		},
		"153": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.toString"
		},
		"154": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.toLocaleString"
		},
		"155": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.toLocaleString"
		},
		"156": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.pop"
		},
		"157": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.pop"
		},
		"158": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.push"
		},
		"159": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.push"
		},
		"160": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "items"
		},
		"161": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.concat"
		},
		"162": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.concat"
		},
		"163": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "items"
		},
		"164": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.concat"
		},
		"165": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "items"
		},
		"166": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.join"
		},
		"167": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.join"
		},
		"168": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "separator"
		},
		"169": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.reverse"
		},
		"170": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.reverse"
		},
		"171": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.shift"
		},
		"172": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.shift"
		},
		"173": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.slice"
		},
		"174": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.slice"
		},
		"175": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "start"
		},
		"176": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "end"
		},
		"177": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.sort"
		},
		"178": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.sort"
		},
		"179": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "compareFn"
		},
		"180": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"181": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"182": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "a"
		},
		"183": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "b"
		},
		"184": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.splice"
		},
		"185": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.splice"
		},
		"186": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "start"
		},
		"187": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "deleteCount"
		},
		"188": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.splice"
		},
		"189": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "start"
		},
		"190": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "deleteCount"
		},
		"191": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "items"
		},
		"192": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.unshift"
		},
		"193": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.unshift"
		},
		"194": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "items"
		},
		"195": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.indexOf"
		},
		"196": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.indexOf"
		},
		"197": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "searchElement"
		},
		"198": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "fromIndex"
		},
		"199": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.lastIndexOf"
		},
		"200": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.lastIndexOf"
		},
		"201": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "searchElement"
		},
		"202": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "fromIndex"
		},
		"203": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.every"
		},
		"204": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.every"
		},
		"205": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "S"
		},
		"206": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "predicate"
		},
		"207": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"208": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"209": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "value"
		},
		"210": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "index"
		},
		"211": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "array"
		},
		"212": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "thisArg"
		},
		"213": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.every"
		},
		"214": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "predicate"
		},
		"215": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"216": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"217": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "value"
		},
		"218": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "index"
		},
		"219": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "array"
		},
		"220": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "thisArg"
		},
		"221": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.some"
		},
		"222": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.some"
		},
		"223": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "predicate"
		},
		"224": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"225": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"226": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "value"
		},
		"227": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "index"
		},
		"228": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "array"
		},
		"229": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "thisArg"
		},
		"230": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.forEach"
		},
		"231": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.forEach"
		},
		"232": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "callbackfn"
		},
		"233": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"234": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"235": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "value"
		},
		"236": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "index"
		},
		"237": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "array"
		},
		"238": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "thisArg"
		},
		"239": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.map"
		},
		"240": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.map"
		},
		"241": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "U"
		},
		"242": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "callbackfn"
		},
		"243": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"244": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"245": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "value"
		},
		"246": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "index"
		},
		"247": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "array"
		},
		"248": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "thisArg"
		},
		"249": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.filter"
		},
		"250": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.filter"
		},
		"251": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "S"
		},
		"252": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "predicate"
		},
		"253": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"254": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"255": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "value"
		},
		"256": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "index"
		},
		"257": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "array"
		},
		"258": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "thisArg"
		},
		"259": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.filter"
		},
		"260": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "predicate"
		},
		"261": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"262": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"263": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "value"
		},
		"264": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "index"
		},
		"265": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "array"
		},
		"266": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "thisArg"
		},
		"267": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.reduce"
		},
		"268": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.reduce"
		},
		"269": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "callbackfn"
		},
		"270": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"271": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"272": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "previousValue"
		},
		"273": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "currentValue"
		},
		"274": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "currentIndex"
		},
		"275": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "array"
		},
		"276": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.reduce"
		},
		"277": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "callbackfn"
		},
		"278": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"279": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"280": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "previousValue"
		},
		"281": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "currentValue"
		},
		"282": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "currentIndex"
		},
		"283": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "array"
		},
		"284": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "initialValue"
		},
		"285": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.reduce"
		},
		"286": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "U"
		},
		"287": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "callbackfn"
		},
		"288": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"289": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"290": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "previousValue"
		},
		"291": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "currentValue"
		},
		"292": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "currentIndex"
		},
		"293": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "array"
		},
		"294": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "initialValue"
		},
		"295": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.reduceRight"
		},
		"296": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.reduceRight"
		},
		"297": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "callbackfn"
		},
		"298": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"299": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"300": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "previousValue"
		},
		"301": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "currentValue"
		},
		"302": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "currentIndex"
		},
		"303": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "array"
		},
		"304": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.reduceRight"
		},
		"305": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "callbackfn"
		},
		"306": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"307": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"308": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "previousValue"
		},
		"309": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "currentValue"
		},
		"310": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "currentIndex"
		},
		"311": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "array"
		},
		"312": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "initialValue"
		},
		"313": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Array.reduceRight"
		},
		"314": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "U"
		},
		"315": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "callbackfn"
		},
		"316": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"317": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "__type"
		},
		"318": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "previousValue"
		},
		"319": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "currentValue"
		},
		"320": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "currentIndex"
		},
		"321": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "array"
		},
		"322": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "initialValue"
		},
		"323": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "Array.find"
		},
		"324": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "Array.find"
		},
		"325": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "S"
		},
		"326": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "predicate"
		},
		"327": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "__type"
		},
		"328": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "__type"
		},
		"329": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "value"
		},
		"330": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "index"
		},
		"331": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "obj"
		},
		"332": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "thisArg"
		},
		"333": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "Array.find"
		},
		"334": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "predicate"
		},
		"335": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "__type"
		},
		"336": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "__type"
		},
		"337": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "value"
		},
		"338": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "index"
		},
		"339": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "obj"
		},
		"340": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "thisArg"
		},
		"341": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "Array.findIndex"
		},
		"342": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "Array.findIndex"
		},
		"343": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "predicate"
		},
		"344": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "__type"
		},
		"345": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "__type"
		},
		"346": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "value"
		},
		"347": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "index"
		},
		"348": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "obj"
		},
		"349": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "thisArg"
		},
		"350": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "Array.fill"
		},
		"351": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "Array.fill"
		},
		"352": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "value"
		},
		"353": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "start"
		},
		"354": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "end"
		},
		"355": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "Array.copyWithin"
		},
		"356": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "Array.copyWithin"
		},
		"357": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "target"
		},
		"358": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "start"
		},
		"359": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "end"
		},
		"360": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
			"qualifiedName": "Array.entries"
		},
		"361": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
			"qualifiedName": "Array.entries"
		},
		"362": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
			"qualifiedName": "Array.keys"
		},
		"363": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
			"qualifiedName": "Array.keys"
		},
		"364": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
			"qualifiedName": "Array.values"
		},
		"365": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
			"qualifiedName": "Array.values"
		},
		"366": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2016.array.include.d.ts",
			"qualifiedName": "Array.includes"
		},
		"367": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2016.array.include.d.ts",
			"qualifiedName": "Array.includes"
		},
		"368": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2016.array.include.d.ts",
			"qualifiedName": "searchElement"
		},
		"369": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2016.array.include.d.ts",
			"qualifiedName": "fromIndex"
		},
		"370": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2019.array.d.ts",
			"qualifiedName": "Array.flatMap"
		},
		"371": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2019.array.d.ts",
			"qualifiedName": "Array.flatMap"
		},
		"372": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2019.array.d.ts",
			"qualifiedName": "U"
		},
		"373": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2019.array.d.ts",
			"qualifiedName": "This"
		},
		"374": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2019.array.d.ts",
			"qualifiedName": "callback"
		},
		"375": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2019.array.d.ts",
			"qualifiedName": "__type"
		},
		"376": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2019.array.d.ts",
			"qualifiedName": "__type"
		},
		"377": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2019.array.d.ts",
			"qualifiedName": "this"
		},
		"378": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2019.array.d.ts",
			"qualifiedName": "value"
		},
		"379": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2019.array.d.ts",
			"qualifiedName": "index"
		},
		"380": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2019.array.d.ts",
			"qualifiedName": "array"
		},
		"381": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2019.array.d.ts",
			"qualifiedName": "thisArg"
		},
		"382": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2019.array.d.ts",
			"qualifiedName": "Array.flat"
		},
		"383": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2019.array.d.ts",
			"qualifiedName": "Array.flat"
		},
		"384": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2019.array.d.ts",
			"qualifiedName": "A"
		},
		"385": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2019.array.d.ts",
			"qualifiedName": "D"
		},
		"386": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2019.array.d.ts",
			"qualifiedName": "this"
		},
		"387": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2019.array.d.ts",
			"qualifiedName": "depth"
		},
		"388": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2022.array.d.ts",
			"qualifiedName": "Array.at"
		},
		"389": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2022.array.d.ts",
			"qualifiedName": "Array.at"
		},
		"390": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2022.array.d.ts",
			"qualifiedName": "index"
		},
		"391": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "Array.findLast"
		},
		"392": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "Array.findLast"
		},
		"393": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "S"
		},
		"394": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "predicate"
		},
		"395": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "__type"
		},
		"396": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "__type"
		},
		"397": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "value"
		},
		"398": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "index"
		},
		"399": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "array"
		},
		"400": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "thisArg"
		},
		"401": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "Array.findLast"
		},
		"402": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "predicate"
		},
		"403": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "__type"
		},
		"404": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "__type"
		},
		"405": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "value"
		},
		"406": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "index"
		},
		"407": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "array"
		},
		"408": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "thisArg"
		},
		"409": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "Array.findLastIndex"
		},
		"410": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "Array.findLastIndex"
		},
		"411": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "predicate"
		},
		"412": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "__type"
		},
		"413": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "__type"
		},
		"414": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "value"
		},
		"415": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "index"
		},
		"416": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "array"
		},
		"417": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "thisArg"
		},
		"418": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
			"qualifiedName": "Array.[iterator]"
		},
		"419": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
			"qualifiedName": "Array.[iterator]"
		},
		"420": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
			"qualifiedName": "Array.[unscopables]"
		},
		"421": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
			"qualifiedName": "__type"
		},
		"422": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "length"
		},
		"423": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "toString"
		},
		"424": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "toLocaleString"
		},
		"425": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "pop"
		},
		"426": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "push"
		},
		"427": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "concat"
		},
		"428": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "join"
		},
		"429": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "reverse"
		},
		"430": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "shift"
		},
		"431": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "slice"
		},
		"432": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "sort"
		},
		"433": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "splice"
		},
		"434": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "unshift"
		},
		"435": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "indexOf"
		},
		"436": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "lastIndexOf"
		},
		"437": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "every"
		},
		"438": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "some"
		},
		"439": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "forEach"
		},
		"440": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "map"
		},
		"441": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "filter"
		},
		"442": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "reduce"
		},
		"443": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "reduceRight"
		},
		"444": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "find"
		},
		"445": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "findIndex"
		},
		"446": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "fill"
		},
		"447": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.core.d.ts",
			"qualifiedName": "copyWithin"
		},
		"448": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
			"qualifiedName": "entries"
		},
		"449": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
			"qualifiedName": "keys"
		},
		"450": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
			"qualifiedName": "values"
		},
		"451": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2016.array.include.d.ts",
			"qualifiedName": "includes"
		},
		"452": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2019.array.d.ts",
			"qualifiedName": "flatMap"
		},
		"453": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2019.array.d.ts",
			"qualifiedName": "flat"
		},
		"454": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2022.array.d.ts",
			"qualifiedName": "at"
		},
		"455": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "findLast"
		},
		"456": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2023.array.d.ts",
			"qualifiedName": "findLastIndex"
		},
		"457": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.iterable.d.ts",
			"qualifiedName": "[iterator]"
		},
		"458": {
			"sourceFileName": "../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
			"qualifiedName": "[unscopables]"
		},
		"459": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise"
		},
		"460": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.resolve"
		},
		"461": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.resolve"
		},
		"462": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.resolve"
		},
		"463": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T"
		},
		"464": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "value"
		},
		"465": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.reject"
		},
		"466": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.reject"
		},
		"467": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T"
		},
		"468": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "reason"
		},
		"469": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.all"
		},
		"470": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.all"
		},
		"471": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T1"
		},
		"472": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T2"
		},
		"473": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T3"
		},
		"474": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T4"
		},
		"475": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T5"
		},
		"476": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T6"
		},
		"477": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T7"
		},
		"478": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T8"
		},
		"479": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T9"
		},
		"480": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T10"
		},
		"481": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "values"
		},
		"482": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.all"
		},
		"483": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T1"
		},
		"484": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T2"
		},
		"485": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T3"
		},
		"486": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T4"
		},
		"487": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T5"
		},
		"488": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T6"
		},
		"489": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T7"
		},
		"490": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T8"
		},
		"491": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T9"
		},
		"492": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "values"
		},
		"493": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.all"
		},
		"494": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T1"
		},
		"495": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T2"
		},
		"496": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T3"
		},
		"497": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T4"
		},
		"498": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T5"
		},
		"499": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T6"
		},
		"500": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T7"
		},
		"501": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T8"
		},
		"502": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "values"
		},
		"503": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.all"
		},
		"504": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T1"
		},
		"505": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T2"
		},
		"506": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T3"
		},
		"507": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T4"
		},
		"508": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T5"
		},
		"509": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T6"
		},
		"510": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T7"
		},
		"511": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "values"
		},
		"512": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.all"
		},
		"513": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T1"
		},
		"514": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T2"
		},
		"515": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T3"
		},
		"516": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T4"
		},
		"517": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T5"
		},
		"518": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T6"
		},
		"519": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "values"
		},
		"520": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.all"
		},
		"521": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T1"
		},
		"522": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T2"
		},
		"523": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T3"
		},
		"524": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T4"
		},
		"525": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T5"
		},
		"526": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "values"
		},
		"527": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.all"
		},
		"528": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T1"
		},
		"529": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T2"
		},
		"530": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T3"
		},
		"531": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T4"
		},
		"532": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "values"
		},
		"533": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.all"
		},
		"534": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T1"
		},
		"535": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T2"
		},
		"536": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T3"
		},
		"537": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "values"
		},
		"538": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.all"
		},
		"539": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T1"
		},
		"540": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T2"
		},
		"541": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "values"
		},
		"542": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.all"
		},
		"543": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T"
		},
		"544": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "values"
		},
		"545": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.allSettled"
		},
		"546": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.allSettled"
		},
		"547": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T"
		},
		"548": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "values"
		},
		"549": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.allSettled"
		},
		"550": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T"
		},
		"551": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "values"
		},
		"552": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.race"
		},
		"553": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.race"
		},
		"554": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "T"
		},
		"555": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "values"
		},
		"556": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.delay"
		},
		"557": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.delay"
		},
		"558": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "ms"
		},
		"559": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.__constructor"
		},
		"560": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise"
		},
		"561": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.T"
		},
		"562": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "promise"
		},
		"563": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "cancel"
		},
		"564": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "__type"
		},
		"565": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "__type"
		},
		"566": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "reason"
		},
		"567": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.promise"
		},
		"568": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.cancel"
		},
		"569": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "__type"
		},
		"570": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "__type"
		},
		"571": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "reason"
		},
		"572": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.then"
		},
		"573": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.then"
		},
		"574": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "TResult1"
		},
		"575": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "TResult2"
		},
		"576": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "onFulfilled"
		},
		"577": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "__type"
		},
		"578": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "__type"
		},
		"579": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "value"
		},
		"580": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "onRejected"
		},
		"581": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "__type"
		},
		"582": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "__type"
		},
		"583": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "reason"
		},
		"584": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.catch"
		},
		"585": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.catch"
		},
		"586": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "TResult"
		},
		"587": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "onRejected"
		},
		"588": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "__type"
		},
		"589": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "__type"
		},
		"590": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "reason"
		},
		"591": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.finally"
		},
		"592": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.finally"
		},
		"593": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "onFinally"
		},
		"594": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "__type"
		},
		"595": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "__type"
		},
		"596": {
			"sourceFileName": "src/classes/CancellablePromise.ts",
			"qualifiedName": "CancellablePromise.T"
		},
		"597": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "SimpleEnum"
		},
		"598": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "SimpleEnum.Pending"
		},
		"599": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "SimpleEnum.InProgress"
		},
		"600": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "SimpleEnum.Complete"
		},
		"601": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "CrazyEnum"
		},
		"602": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "CrazyEnum.None"
		},
		"603": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "CrazyEnum.Read"
		},
		"604": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "CrazyEnum.Write"
		},
		"605": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "CrazyEnum.ReadWrite"
		},
		"606": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "CrazyEnum.ComputedMember"
		},
		"607": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "EnumLikeObject"
		},
		"608": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "__object.Pending"
		},
		"609": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "__object.InProgress"
		},
		"610": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "__object.Completed"
		},
		"611": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "EnumLikeObjectNumValues"
		},
		"612": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "__object.Pending"
		},
		"613": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "__object.InProgress"
		},
		"614": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "__object.Completed"
		},
		"615": {
			"sourceFileName": "node_modules/@types/lodash/common/collection.d.ts",
			"qualifiedName": "\"../index\".LoDashStatic.sortBy"
		},
		"616": {
			"sourceFileName": "node_modules/@types/lodash/common/collection.d.ts",
			"qualifiedName": "\"../index\".LoDashStatic.sortBy"
		},
		"617": {
			"sourceFileName": "node_modules/@types/lodash/common/collection.d.ts",
			"qualifiedName": "T"
		},
		"618": {
			"sourceFileName": "node_modules/@types/lodash/common/collection.d.ts",
			"qualifiedName": "collection"
		},
		"619": {
			"sourceFileName": "node_modules/@types/lodash/common/collection.d.ts",
			"qualifiedName": "iteratees"
		},
		"620": {
			"sourceFileName": "node_modules/@types/lodash/common/collection.d.ts",
			"qualifiedName": "\"../index\".LoDashStatic.sortBy"
		},
		"621": {
			"sourceFileName": "node_modules/@types/lodash/common/collection.d.ts",
			"qualifiedName": "T"
		},
		"622": {
			"sourceFileName": "node_modules/@types/lodash/common/collection.d.ts",
			"qualifiedName": "collection"
		},
		"623": {
			"sourceFileName": "node_modules/@types/lodash/common/collection.d.ts",
			"qualifiedName": "iteratees"
		},
		"624": {
			"sourceFileName": "src/showcase.ts",
			"qualifiedName": "markdownShowcase"
		},
		"625": {
			"sourceFileName": "src/showcase.ts",
			"qualifiedName": "markdownShowcase"
		},
		"626": {
			"sourceFileName": "src/showcase.ts",
			"qualifiedName": "syntaxHighlightingShowcase"
		},
		"627": {
			"sourceFileName": "src/showcase.ts",
			"qualifiedName": "syntaxHighlightingShowcase"
		},
		"628": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "CardA"
		},
		"629": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "CardA"
		},
		"630": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "__0"
		},
		"631": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "CardB"
		},
		"632": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "CardB"
		},
		"633": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "__0"
		},
		"634": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "__type"
		},
		"635": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "__type.variant"
		},
		"636": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "EasyFormDialog"
		},
		"637": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "EasyFormDialog"
		},
		"638": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "props"
		},
		"639": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "CardAProps"
		},
		"640": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "CardAProps.variant"
		},
		"641": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "EasyFormDialogProps"
		},
		"642": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "EasyFormDialogProps.title"
		},
		"643": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "EasyFormDialogProps.submitButtonText"
		},
		"644": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "EasyFormDialogProps.submitButtonClass"
		},
		"645": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "EasyFormDialogProps.cancelButtonText"
		},
		"646": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "EasyFormDialogProps.submitEnabled"
		},
		"647": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "EasyFormDialogProps.formIsValid"
		},
		"648": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "EasyFormDialogProps.showValidation"
		},
		"649": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "EasyFormDialogProps.onShowValidationChange"
		},
		"650": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "EasyFormDialogProps.onShowValidationChange"
		},
		"651": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "showValidation"
		},
		"652": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "EasyFormDialogProps.onSuccess"
		},
		"653": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "EasyFormDialogProps.onSuccess"
		},
		"654": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "payload"
		},
		"655": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "EasyFormDialogProps.onClose"
		},
		"656": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "EasyFormDialogProps.onClose"
		},
		"657": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "EasyFormDialogProps.onSubmit"
		},
		"658": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "EasyFormDialogProps.onSubmit"
		},
		"659": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "formData"
		},
		"660": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "__type"
		},
		"661": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "__type.shouldClose"
		},
		"662": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "__type.responseData"
		},
		"663": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "EasyFormDialogProps.onCancel"
		},
		"664": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "EasyFormDialogProps.onCancel"
		},
		"665": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "EasyFormDialogProps.closeRef"
		},
		"666": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "__type"
		},
		"667": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "__type"
		},
		"668": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "EasyFormDialogProps.modalClass"
		},
		"669": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "EasyFormDialogProps.focusFirst"
		},
		"670": {
			"sourceFileName": "src/reactComponents.tsx",
			"qualifiedName": "EasyFormDialogProps.showFooter"
		},
		"671": {
			"sourceFileName": "src/internals.ts",
			"qualifiedName": "anInternalFunction"
		},
		"672": {
			"sourceFileName": "src/internals.ts",
			"qualifiedName": "anInternalFunction"
		}
	}
}